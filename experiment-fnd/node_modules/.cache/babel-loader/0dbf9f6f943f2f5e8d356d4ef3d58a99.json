{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _require = require('relay-runtime'),\n    getSelector = _require.getSelector;\n\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {}; // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n\n  Object.keys(fragments).forEach(function (key) {\n    var _selector$selectors$, _selector$selectors$2, _selector$owner$varia;\n\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_selector$selectors$ = (_selector$selectors$2 = selector.selectors[0]) === null || _selector$selectors$2 === void 0 ? void 0 : _selector$selectors$2.owner.variables) !== null && _selector$selectors$ !== void 0 ? _selector$selectors$ : {} : (_selector$owner$varia = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _selector$owner$varia !== void 0 ? _selector$owner$varia : {};\n    rootVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\n\nmodule.exports = getRootVariablesForFragments;","map":{"version":3,"names":["_interopRequireDefault","require","_objectSpread2","_require","getSelector","getRootVariablesForFragments","fragments","props","rootVariables","Object","keys","forEach","key","_selector$selectors$","_selector$selectors$2","_selector$owner$varia","fragmentNode","fragmentRef","selector","fragmentOwnerVariables","kind","selectors","owner","variables","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/react-relay/lib/getRootVariablesForFragments.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _require = require('relay-runtime'),\n    getSelector = _require.getSelector;\n\nfunction getRootVariablesForFragments(fragments, props) {\n  var rootVariables = {}; // NOTE: For extra safety, we make sure the rootVariables include the\n  // variables from all owners in this fragmentSpec, even though they\n  // should all point to the same owner\n\n  Object.keys(fragments).forEach(function (key) {\n    var _selector$selectors$, _selector$selectors$2, _selector$owner$varia;\n\n    var fragmentNode = fragments[key];\n    var fragmentRef = props[key];\n    var selector = getSelector(fragmentNode, fragmentRef);\n    var fragmentOwnerVariables = selector != null && selector.kind === 'PluralReaderSelector' ? (_selector$selectors$ = (_selector$selectors$2 = selector.selectors[0]) === null || _selector$selectors$2 === void 0 ? void 0 : _selector$selectors$2.owner.variables) !== null && _selector$selectors$ !== void 0 ? _selector$selectors$ : {} : (_selector$owner$varia = selector === null || selector === void 0 ? void 0 : selector.owner.variables) !== null && _selector$owner$varia !== void 0 ? _selector$owner$varia : {};\n    rootVariables = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, rootVariables), fragmentOwnerVariables);\n  });\n  return rootVariables;\n}\n\nmodule.exports = getRootVariablesForFragments;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,cAAc,GAAGF,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA3C;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,eAAD,CAAtB;AAAA,IACIG,WAAW,GAAGD,QAAQ,CAACC,WAD3B;;AAGA,SAASC,4BAAT,CAAsCC,SAAtC,EAAiDC,KAAjD,EAAwD;EACtD,IAAIC,aAAa,GAAG,EAApB,CADsD,CAC9B;EACxB;EACA;;EAEAC,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,OAAvB,CAA+B,UAAUC,GAAV,EAAe;IAC5C,IAAIC,oBAAJ,EAA0BC,qBAA1B,EAAiDC,qBAAjD;;IAEA,IAAIC,YAAY,GAAGV,SAAS,CAACM,GAAD,CAA5B;IACA,IAAIK,WAAW,GAAGV,KAAK,CAACK,GAAD,CAAvB;IACA,IAAIM,QAAQ,GAAGd,WAAW,CAACY,YAAD,EAAeC,WAAf,CAA1B;IACA,IAAIE,sBAAsB,GAAGD,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACE,IAAT,KAAkB,sBAAtC,GAA+D,CAACP,oBAAoB,GAAG,CAACC,qBAAqB,GAAGI,QAAQ,CAACG,SAAT,CAAmB,CAAnB,CAAzB,MAAoD,IAApD,IAA4DP,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwGA,qBAAqB,CAACQ,KAAtB,CAA4BC,SAA5J,MAA2K,IAA3K,IAAmLV,oBAAoB,KAAK,KAAK,CAAjN,GAAqNA,oBAArN,GAA4O,EAA3S,GAAgT,CAACE,qBAAqB,GAAGG,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACI,KAAT,CAAeC,SAA5F,MAA2G,IAA3G,IAAmHR,qBAAqB,KAAK,KAAK,CAAlJ,GAAsJA,qBAAtJ,GAA8K,EAA3f;IACAP,aAAa,GAAG,CAAC,GAAGN,cAAc,CAAC,SAAD,CAAlB,EAA+B,CAAC,GAAGA,cAAc,CAAC,SAAD,CAAlB,EAA+B,EAA/B,EAAmCM,aAAnC,CAA/B,EAAkFW,sBAAlF,CAAhB;EACD,CARD;EASA,OAAOX,aAAP;AACD;;AAEDgB,MAAM,CAACC,OAAP,GAAiBpB,4BAAjB"},"metadata":{},"sourceType":"script"}