{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar invariant = require('invariant');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  _proto.getOptimisticRecordIDs = function getOptimisticRecordIDs() {\n    return new Set(this._sink.getRecordIDs());\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nfunction getOptimisticRecordIDs(source) {\n  !(source instanceof RelayOptimisticRecordSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOptimisticRecordIDs: Instance of RelayOptimisticRecordSource is expected') : invariant(false) : void 0;\n  return source.getOptimisticRecordIDs();\n}\n\nmodule.exports = {\n  create: create,\n  getOptimisticRecordIDs: getOptimisticRecordIDs\n};","map":{"version":3,"names":["_interopRequireDefault","require","_objectSpread2","RelayRecordSource","invariant","UNPUBLISH_RECORD_SENTINEL","Object","freeze","__UNPUBLISH_RECORD_SENTINEL","RelayOptimisticRecordSource","base","_base","_sink","create","_proto","prototype","has","dataID","sinkRecord","get","undefined","getStatus","record","clear","_delete","remove","set","getRecordIDs","keys","toJSON","size","length","_this","merged","forEach","getOptimisticRecordIDs","Set","source","process","env","NODE_ENV","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar invariant = require('invariant');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  _proto.getOptimisticRecordIDs = function getOptimisticRecordIDs() {\n    return new Set(this._sink.getRecordIDs());\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nfunction getOptimisticRecordIDs(source) {\n  !(source instanceof RelayOptimisticRecordSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getOptimisticRecordIDs: Instance of RelayOptimisticRecordSource is expected') : invariant(false) : void 0;\n  return source.getOptimisticRecordIDs();\n}\n\nmodule.exports = {\n  create: create,\n  getOptimisticRecordIDs: getOptimisticRecordIDs\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}