{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar getRefetchMetadata = require('./getRefetchMetadata');\n\nvar invariant = require('invariant');\n\nfunction getPaginationMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n      paginationRequest = _getRefetchMetadata.refetchableRequest,\n      refetchMetadata = _getRefetchMetadata.refetchMetadata;\n\n  var paginationMetadata = refetchMetadata.connection;\n  !(paginationMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var connectionPathInFragmentData = paginationMetadata.path;\n  var connectionMetadata = ((_fragmentNode$metadat = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.connection) !== null && _fragmentNode$metadat !== void 0 ? _fragmentNode$metadat : [])[0];\n  !(connectionMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    connectionPathInFragmentData: connectionPathInFragmentData,\n    identifierField: identifierField,\n    paginationRequest: paginationRequest,\n    paginationMetadata: paginationMetadata,\n    stream: connectionMetadata.stream === true\n  };\n}\n\nmodule.exports = getPaginationMetadata;","map":{"version":3,"names":["getRefetchMetadata","require","invariant","getPaginationMetadata","fragmentNode","componentDisplayName","_fragmentNode$metadat","_fragmentNode$metadat2","_getRefetchMetadata","paginationRequest","refetchableRequest","refetchMetadata","paginationMetadata","connection","process","env","NODE_ENV","name","connectionPathInFragmentData","path","connectionMetadata","metadata","identifierField","stream","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/util/getPaginationMetadata.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar getRefetchMetadata = require('./getRefetchMetadata');\n\nvar invariant = require('invariant');\n\nfunction getPaginationMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n\n  var _getRefetchMetadata = getRefetchMetadata(fragmentNode, componentDisplayName),\n      paginationRequest = _getRefetchMetadata.refetchableRequest,\n      refetchMetadata = _getRefetchMetadata.refetchMetadata;\n\n  var paginationMetadata = refetchMetadata.connection;\n  !(paginationMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var connectionPathInFragmentData = paginationMetadata.path;\n  var connectionMetadata = ((_fragmentNode$metadat = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.connection) !== null && _fragmentNode$metadat !== void 0 ? _fragmentNode$metadat : [])[0];\n  !(connectionMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getPaginationMetadata(): Expected fragment `%s` to include a ' + 'connection when using `%s`. Did you forget to add a @connection ' + 'directive to the connection field in the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    connectionPathInFragmentData: connectionPathInFragmentData,\n    identifierField: identifierField,\n    paginationRequest: paginationRequest,\n    paginationMetadata: paginationMetadata,\n    stream: connectionMetadata.stream === true\n  };\n}\n\nmodule.exports = getPaginationMetadata;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sBAAD,CAAhC;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASE,qBAAT,CAA+BC,YAA/B,EAA6CC,oBAA7C,EAAmE;EACjE,IAAIC,qBAAJ,EAA2BC,sBAA3B;;EAEA,IAAIC,mBAAmB,GAAGR,kBAAkB,CAACI,YAAD,EAAeC,oBAAf,CAA5C;EAAA,IACII,iBAAiB,GAAGD,mBAAmB,CAACE,kBAD5C;EAAA,IAEIC,eAAe,GAAGH,mBAAmB,CAACG,eAF1C;;EAIA,IAAIC,kBAAkB,GAAGD,eAAe,CAACE,UAAzC;EACA,EAAED,kBAAkB,IAAI,IAAxB,IAAgCE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCd,SAAS,CAAC,KAAD,EAAQ,yEAAyE,kEAAzE,GAA8I,oDAAtJ,EAA4MG,oBAA5M,EAAkOD,YAAY,CAACa,IAA/O,CAAjD,GAAwSf,SAAS,CAAC,KAAD,CAAjV,GAA2V,KAAK,CAAhW;EACA,IAAIgB,4BAA4B,GAAGN,kBAAkB,CAACO,IAAtD;EACA,IAAIC,kBAAkB,GAAG,CAAC,CAACd,qBAAqB,GAAG,CAACC,sBAAsB,GAAGH,YAAY,CAACiB,QAAvC,MAAqD,IAArD,IAA6Dd,sBAAsB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,sBAAsB,CAACM,UAA1J,MAA0K,IAA1K,IAAkLP,qBAAqB,KAAK,KAAK,CAAjN,GAAqNA,qBAArN,GAA6O,EAA9O,EAAkP,CAAlP,CAAzB;EACA,EAAEc,kBAAkB,IAAI,IAAxB,IAAgCN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCd,SAAS,CAAC,KAAD,EAAQ,yEAAyE,kEAAzE,GAA8I,oDAAtJ,EAA4MG,oBAA5M,EAAkOD,YAAY,CAACa,IAA/O,CAAjD,GAAwSf,SAAS,CAAC,KAAD,CAAjV,GAA2V,KAAK,CAAhW;EACA,IAAIoB,eAAe,GAAGX,eAAe,CAACW,eAAtC;EACA,EAAEA,eAAe,IAAI,IAAnB,IAA2B,OAAOA,eAAP,KAA2B,QAAxD,IAAoER,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCd,SAAS,CAAC,KAAD,EAAQ,yEAAR,CAAjD,GAAsIA,SAAS,CAAC,KAAD,CAAnN,GAA6N,KAAK,CAAlO;EACA,OAAO;IACLgB,4BAA4B,EAAEA,4BADzB;IAELI,eAAe,EAAEA,eAFZ;IAGLb,iBAAiB,EAAEA,iBAHd;IAILG,kBAAkB,EAAEA,kBAJf;IAKLW,MAAM,EAAEH,kBAAkB,CAACG,MAAnB,KAA8B;EALjC,CAAP;AAOD;;AAEDC,MAAM,CAACC,OAAP,GAAiBtB,qBAAjB"},"metadata":{},"sourceType":"script"}