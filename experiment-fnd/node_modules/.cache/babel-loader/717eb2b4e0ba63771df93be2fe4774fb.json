{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/src/summarycomponent/SummaryView.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLazyLoadQuery } from \"react-relay\";\nimport Overall from \"../components/Overall\";\nimport SummaryRating from \"./SummaryRating\";\nimport \"./index.css\";\nimport { useState } from \"react\";\nimport { globalquery } from \"../Query/QueryGlobal\"; // const globalquery = graphql`\n//   query SummaryViewQuery($resourceId: ID!, $userId: ID!) {\n//     getResourceRatingFeedback(resourceId: $resourceId) {\n//       resourceId\n//       Configurations {\n//         enableRatingsOnResource\n//         enableFeedbackOnResourse\n//       }\n//       ...Overall_ResouceFragment\n//     }\n//     getUserResourceRatingFeedback(userId: $userId, resourceId: $resourceId) {\n//       userId\n//       resourceId\n//       rating\n//       feedback\n//       updatedAt\n//     }\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SummaryView(props) {\n  _s();\n\n  const data = useLazyLoadQuery(globalquery, {\n    resourceId: \"2\",\n    userId: \"1\"\n  });\n  const [userdata, setUserdata] = useState(data.getUserResourceRatingFeedback);\n  const configuration = data.getResourceRatingFeedback.Configurations;\n\n  function HandleUserdata(value) {\n    setUserdata(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SummaryBox\",\n    children: [props.overallrating && configuration.enableRatingsOnResource ? /*#__PURE__*/_jsxDEV(Overall, {\n      overallData: data.getResourceRatingFeedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : \"\", configuration.enableRatingsOnResource ? /*#__PURE__*/_jsxDEV(SummaryRating, {\n      user: userdata,\n      onChange: HandleUserdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SummaryView, \"jS0RxnhJiLw/0FlikVyEDP9rdQk=\", false, function () {\n  return [useLazyLoadQuery];\n});\n\n_c = SummaryView;\nexport default SummaryView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummaryView\");","map":{"version":3,"names":["useLazyLoadQuery","Overall","SummaryRating","useState","globalquery","SummaryView","props","data","resourceId","userId","userdata","setUserdata","getUserResourceRatingFeedback","configuration","getResourceRatingFeedback","Configurations","HandleUserdata","value","overallrating","enableRatingsOnResource"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/src/summarycomponent/SummaryView.tsx"],"sourcesContent":["import { useLazyLoadQuery } from \"react-relay\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport environment from \"../RelayEnvironment\";\nimport Ratings from \"../components/Ratings\";\nimport Overall from \"../components/Overall\";\nimport Feedback from \"../components/Feedback\";\nimport SummaryRating from \"./SummaryRating\";\nimport \"./index.css\";\nimport { useState } from \"react\";\nimport { globalquery } from \"../Query/QueryGlobal\";\n\n// const globalquery = graphql`\n//   query SummaryViewQuery($resourceId: ID!, $userId: ID!) {\n//     getResourceRatingFeedback(resourceId: $resourceId) {\n//       resourceId\n//       Configurations {\n//         enableRatingsOnResource\n//         enableFeedbackOnResourse\n//       }\n//       ...Overall_ResouceFragment\n//     }\n\n//     getUserResourceRatingFeedback(userId: $userId, resourceId: $resourceId) {\n//       userId\n//       resourceId\n//       rating\n//       feedback\n//       updatedAt\n//     }\n//   }\n// `;\n\nfunction SummaryView(props: any) {\n  const data: any = useLazyLoadQuery(globalquery, {\n    resourceId: \"2\",\n    userId: \"1\",\n  });\n\n  const [userdata, setUserdata] = useState(data.getUserResourceRatingFeedback);\n\n  const configuration: any = data.getResourceRatingFeedback.Configurations;\n\n  function HandleUserdata(value: any) {\n    setUserdata(value);\n  }\n\n  return (\n    <div className=\"SummaryBox\">\n      {props.overallrating && configuration.enableRatingsOnResource ? (\n        <Overall overallData={data.getResourceRatingFeedback} />\n      ) : (\n        \"\"\n      )}\n\n      {configuration.enableRatingsOnResource ? (\n        <SummaryRating user={userdata} onChange={HandleUserdata} />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default SummaryView;\n"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,aAAjC;AAIA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAAiC;EAAA;;EAC/B,MAAMC,IAAS,GAAGP,gBAAgB,CAACI,WAAD,EAAc;IAC9CI,UAAU,EAAE,GADkC;IAE9CC,MAAM,EAAE;EAFsC,CAAd,CAAlC;EAKA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACI,IAAI,CAACK,6BAAN,CAAxC;EAEA,MAAMC,aAAkB,GAAGN,IAAI,CAACO,yBAAL,CAA+BC,cAA1D;;EAEA,SAASC,cAAT,CAAwBC,KAAxB,EAAoC;IAClCN,WAAW,CAACM,KAAD,CAAX;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,WACGX,KAAK,CAACY,aAAN,IAAuBL,aAAa,CAACM,uBAArC,gBACC,QAAC,OAAD;MAAS,WAAW,EAAEZ,IAAI,CAACO;IAA3B;MAAA;MAAA;MAAA;IAAA,QADD,GAGC,EAJJ,EAOGD,aAAa,CAACM,uBAAd,gBACC,QAAC,aAAD;MAAe,IAAI,EAAET,QAArB;MAA+B,QAAQ,EAAEM;IAAzC;MAAA;MAAA;MAAA;IAAA,QADD,GAGC,EAVJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA7BQX,W;UACWL,gB;;;KADXK,W;AA+BT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}