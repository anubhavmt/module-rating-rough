{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar invariant = require('invariant');\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\n\n\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", []);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n\n      var events = _this._events;\n\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n\n        var event = events[i];\n\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n\n          case 'error':\n            sink.error(event.error);\n            break;\n\n          case 'next':\n            sink.next(event.data);\n            break;\n\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n\n  var _proto = RelayReplaySubject.prototype;\n\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'complete'\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n\n  _proto.subscribe = function subscribe(observer) {\n    var subscription = this._observable.subscribe(observer);\n\n    this._subscription.push(subscription);\n\n    return subscription;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._subscription),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var subscription = _step.value;\n        subscription.unsubscribe();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    this._subscription = [];\n  };\n\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n\n  return RelayReplaySubject;\n}();\n\nmodule.exports = RelayReplaySubject;","map":{"version":3,"names":["_interopRequireDefault","require","_createForOfIteratorHelper2","_defineProperty2","RelayObservable","invariant","RelayReplaySubject","_this","Set","_observable","create","sink","_sinks","add","events","_events","i","length","closed","event","kind","complete","error","next","data","process","env","NODE_ENV","_proto","prototype","_complete","push","forEach","_error","subscribe","observer","subscription","_subscription","unsubscribe","_iterator","_step","s","n","done","value","err","e","f","getObserverCount","size","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/util/RelayReplaySubject.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar RelayObservable = require('../network/RelayObservable');\n\nvar invariant = require('invariant');\n\n/**\n * An implementation of a `ReplaySubject` for Relay Observables.\n *\n * Records events provided and synchronously plays them back to new subscribers,\n * as well as forwarding new asynchronous events.\n */\nvar RelayReplaySubject = /*#__PURE__*/function () {\n  function RelayReplaySubject() {\n    var _this = this;\n\n    (0, _defineProperty2[\"default\"])(this, \"_complete\", false);\n    (0, _defineProperty2[\"default\"])(this, \"_events\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_sinks\", new Set());\n    (0, _defineProperty2[\"default\"])(this, \"_subscription\", []);\n    this._observable = RelayObservable.create(function (sink) {\n      _this._sinks.add(sink);\n\n      var events = _this._events;\n\n      for (var i = 0; i < events.length; i++) {\n        if (sink.closed) {\n          // Bail if an event made the observer unsubscribe.\n          break;\n        }\n\n        var event = events[i];\n\n        switch (event.kind) {\n          case 'complete':\n            sink.complete();\n            break;\n\n          case 'error':\n            sink.error(event.error);\n            break;\n\n          case 'next':\n            sink.next(event.data);\n            break;\n\n          default:\n            event.kind;\n            !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayReplaySubject: Unknown event kind `%s`.', event.kind) : invariant(false) : void 0;\n        }\n      }\n\n      return function () {\n        _this._sinks[\"delete\"](sink);\n      };\n    });\n  }\n\n  var _proto = RelayReplaySubject.prototype;\n\n  _proto.complete = function complete() {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'complete'\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.complete();\n    });\n  };\n\n  _proto.error = function error(_error) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._complete = true;\n\n    this._events.push({\n      kind: 'error',\n      error: _error\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.error(_error);\n    });\n  };\n\n  _proto.next = function next(data) {\n    if (this._complete === true) {\n      return;\n    }\n\n    this._events.push({\n      kind: 'next',\n      data: data\n    });\n\n    this._sinks.forEach(function (sink) {\n      return sink.next(data);\n    });\n  };\n\n  _proto.subscribe = function subscribe(observer) {\n    var subscription = this._observable.subscribe(observer);\n\n    this._subscription.push(subscription);\n\n    return subscription;\n  };\n\n  _proto.unsubscribe = function unsubscribe() {\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._subscription),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var subscription = _step.value;\n        subscription.unsubscribe();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    this._subscription = [];\n  };\n\n  _proto.getObserverCount = function getObserverCount() {\n    return this._sinks.size;\n  };\n\n  return RelayReplaySubject;\n}();\n\nmodule.exports = RelayReplaySubject;"],"mappings":"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"},"metadata":{},"sourceType":"script"}