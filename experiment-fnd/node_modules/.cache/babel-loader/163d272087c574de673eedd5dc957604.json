{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require('invariant');\n\nfunction getRefetchMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n\n  !(((_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` not to be plural when using ' + '`%s`. Remove `@relay(plural: true)` from fragment `%s` ' + 'in order to use it with `%s`.', fragmentNode.name, componentDisplayName, fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n  var refetchMetadata = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.refetch;\n  !(refetchMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` to be refetchable when using `%s`. ' + 'Did you forget to add a @refetchable directive to the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0; // handle both commonjs and es modules\n\n  var refetchableRequest = refetchMetadata.operation[\"default\"] ? refetchMetadata.operation[\"default\"] : refetchMetadata.operation;\n  var fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;\n  !(typeof refetchableRequest !== 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected refetch query to be an ' + \"operation and not a string when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', componentDisplayName) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    fragmentRefPathInResponse: fragmentRefPathInResponse,\n    identifierField: identifierField,\n    refetchableRequest: refetchableRequest,\n    refetchMetadata: refetchMetadata\n  };\n}\n\nmodule.exports = getRefetchMetadata;","map":{"version":3,"names":["invariant","require","getRefetchMetadata","fragmentNode","componentDisplayName","_fragmentNode$metadat","_fragmentNode$metadat2","metadata","plural","process","env","NODE_ENV","name","refetchMetadata","refetch","refetchableRequest","operation","fragmentRefPathInResponse","fragmentPathInResult","identifierField","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/util/getRefetchMetadata.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar invariant = require('invariant');\n\nfunction getRefetchMetadata(fragmentNode, componentDisplayName) {\n  var _fragmentNode$metadat, _fragmentNode$metadat2;\n\n  !(((_fragmentNode$metadat = fragmentNode.metadata) === null || _fragmentNode$metadat === void 0 ? void 0 : _fragmentNode$metadat.plural) !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` not to be plural when using ' + '`%s`. Remove `@relay(plural: true)` from fragment `%s` ' + 'in order to use it with `%s`.', fragmentNode.name, componentDisplayName, fragmentNode.name, componentDisplayName) : invariant(false) : void 0;\n  var refetchMetadata = (_fragmentNode$metadat2 = fragmentNode.metadata) === null || _fragmentNode$metadat2 === void 0 ? void 0 : _fragmentNode$metadat2.refetch;\n  !(refetchMetadata != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected fragment `%s` to be refetchable when using `%s`. ' + 'Did you forget to add a @refetchable directive to the fragment?', componentDisplayName, fragmentNode.name) : invariant(false) : void 0; // handle both commonjs and es modules\n\n  var refetchableRequest = refetchMetadata.operation[\"default\"] ? refetchMetadata.operation[\"default\"] : refetchMetadata.operation;\n  var fragmentRefPathInResponse = refetchMetadata.fragmentPathInResult;\n  !(typeof refetchableRequest !== 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected refetch query to be an ' + \"operation and not a string when using `%s`. If you're seeing this, \" + 'this is likely a bug in Relay.', componentDisplayName) : invariant(false) : void 0;\n  var identifierField = refetchMetadata.identifierField;\n  !(identifierField == null || typeof identifierField === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: getRefetchMetadata(): Expected `identifierField` to be a string.') : invariant(false) : void 0;\n  return {\n    fragmentRefPathInResponse: fragmentRefPathInResponse,\n    identifierField: identifierField,\n    refetchableRequest: refetchableRequest,\n    refetchMetadata: refetchMetadata\n  };\n}\n\nmodule.exports = getRefetchMetadata;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,oBAA1C,EAAgE;EAC9D,IAAIC,qBAAJ,EAA2BC,sBAA3B;;EAEA,EAAE,CAAC,CAACD,qBAAqB,GAAGF,YAAY,CAACI,QAAtC,MAAoD,IAApD,IAA4DF,qBAAqB,KAAK,KAAK,CAA3F,GAA+F,KAAK,CAApG,GAAwGA,qBAAqB,CAACG,MAA/H,MAA2I,IAA7I,IAAqJC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAAC,KAAD,EAAQ,qFAAqF,yDAArF,GAAiJ,+BAAzJ,EAA0LG,YAAY,CAACS,IAAvM,EAA6MR,oBAA7M,EAAmOD,YAAY,CAACS,IAAhP,EAAsPR,oBAAtP,CAAjD,GAA+TJ,SAAS,CAAC,KAAD,CAA7d,GAAue,KAAK,CAA5e;EACA,IAAIa,eAAe,GAAG,CAACP,sBAAsB,GAAGH,YAAY,CAACI,QAAvC,MAAqD,IAArD,IAA6DD,sBAAsB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,sBAAsB,CAACQ,OAAvJ;EACA,EAAED,eAAe,IAAI,IAArB,IAA6BJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAAC,KAAD,EAAQ,4FAA4F,iEAApG,EAAuKI,oBAAvK,EAA6LD,YAAY,CAACS,IAA1M,CAAjD,GAAmQZ,SAAS,CAAC,KAAD,CAAzS,GAAmT,KAAK,CAAxT,CAL8D,CAK6P;;EAE3T,IAAIe,kBAAkB,GAAGF,eAAe,CAACG,SAAhB,CAA0B,SAA1B,IAAuCH,eAAe,CAACG,SAAhB,CAA0B,SAA1B,CAAvC,GAA8EH,eAAe,CAACG,SAAvH;EACA,IAAIC,yBAAyB,GAAGJ,eAAe,CAACK,oBAAhD;EACA,EAAE,OAAOH,kBAAP,KAA8B,QAAhC,IAA4CN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAAC,KAAD,EAAQ,kEAAkE,qEAAlE,GAA0I,gCAAlJ,EAAoLI,oBAApL,CAAjD,GAA6PJ,SAAS,CAAC,KAAD,CAAlT,GAA4T,KAAK,CAAjU;EACA,IAAImB,eAAe,GAAGN,eAAe,CAACM,eAAtC;EACA,EAAEA,eAAe,IAAI,IAAnB,IAA2B,OAAOA,eAAP,KAA2B,QAAxD,IAAoEV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAAC,KAAD,EAAQ,yEAAR,CAAjD,GAAsIA,SAAS,CAAC,KAAD,CAAnN,GAA6N,KAAK,CAAlO;EACA,OAAO;IACLiB,yBAAyB,EAAEA,yBADtB;IAELE,eAAe,EAAEA,eAFZ;IAGLJ,kBAAkB,EAAEA,kBAHf;IAILF,eAAe,EAAEA;EAJZ,CAAP;AAMD;;AAEDO,MAAM,CAACC,OAAP,GAAiBnB,kBAAjB"},"metadata":{},"sourceType":"script"}