{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\n\nvar _require = require('./loadQuery'),\n    useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\n\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\n\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\n\nvar _require2 = require('relay-runtime'),\n    fetchQuery = _require2.__internal.fetchQuery; // This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\n\nfunction useLazyLoadQuery_LEGACY(gqlQuery, variables, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var query = useMemoOperationDescriptor(gqlQuery, variables, options && options.networkCacheConfig ? options.networkCacheConfig : {\n    force: true\n  });\n  var data = useLazyLoadQueryNode({\n    componentDisplayName: 'useLazyLoadQuery()',\n    fetchKey: options === null || options === void 0 ? void 0 : options.fetchKey,\n    fetchObservable: fetchQuery(environment, query),\n    fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n    query: query,\n    renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n  });\n  return data;\n}\n\nfunction useLazyLoadQuery(gqlQuery, variables, options) {\n  var impl = HooksImplementation.get();\n\n  if (impl) {\n    return impl.useLazyLoadQuery(gqlQuery, variables, options);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useLazyLoadQuery_LEGACY(gqlQuery, variables, options);\n  }\n}\n\nmodule.exports = useLazyLoadQuery;","map":{"version":3,"names":["HooksImplementation","require","_require","useTrackLoadQueryInRender","useLazyLoadQueryNode","useMemoOperationDescriptor","useRelayEnvironment","_require2","fetchQuery","__internal","useLazyLoadQuery_LEGACY","gqlQuery","variables","options","environment","query","networkCacheConfig","force","data","componentDisplayName","fetchKey","fetchObservable","fetchPolicy","renderPolicy","UNSTABLE_renderPolicy","useLazyLoadQuery","impl","get","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/react-relay/lib/relay-hooks/useLazyLoadQuery.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar HooksImplementation = require('./HooksImplementation');\n\nvar _require = require('./loadQuery'),\n    useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\n\nvar useLazyLoadQueryNode = require('./useLazyLoadQueryNode');\n\nvar useMemoOperationDescriptor = require('./useMemoOperationDescriptor');\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\n\nvar _require2 = require('relay-runtime'),\n    fetchQuery = _require2.__internal.fetchQuery; // This separate type export is only needed as long as we are injecting\n// a separate hooks implementation in ./HooksImplementation -- it can\n// be removed after we stop doing that.\n\n\nfunction useLazyLoadQuery_LEGACY(gqlQuery, variables, options) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var environment = useRelayEnvironment();\n  var query = useMemoOperationDescriptor(gqlQuery, variables, options && options.networkCacheConfig ? options.networkCacheConfig : {\n    force: true\n  });\n  var data = useLazyLoadQueryNode({\n    componentDisplayName: 'useLazyLoadQuery()',\n    fetchKey: options === null || options === void 0 ? void 0 : options.fetchKey,\n    fetchObservable: fetchQuery(environment, query),\n    fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n    query: query,\n    renderPolicy: options === null || options === void 0 ? void 0 : options.UNSTABLE_renderPolicy\n  });\n  return data;\n}\n\nfunction useLazyLoadQuery(gqlQuery, variables, options) {\n  var impl = HooksImplementation.get();\n\n  if (impl) {\n    return impl.useLazyLoadQuery(gqlQuery, variables, options);\n  } else {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useLazyLoadQuery_LEGACY(gqlQuery, variables, options);\n  }\n}\n\nmodule.exports = useLazyLoadQuery;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIE,yBAAyB,GAAGD,QAAQ,CAACC,yBADzC;;AAGA,IAAIC,oBAAoB,GAAGH,OAAO,CAAC,wBAAD,CAAlC;;AAEA,IAAII,0BAA0B,GAAGJ,OAAO,CAAC,8BAAD,CAAxC;;AAEA,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,uBAAD,CAAjC;;AAEA,IAAIM,SAAS,GAAGN,OAAO,CAAC,eAAD,CAAvB;AAAA,IACIO,UAAU,GAAGD,SAAS,CAACE,UAAV,CAAqBD,UADtC,C,CACkD;AAClD;AACA;;;AAGA,SAASE,uBAAT,CAAiCC,QAAjC,EAA2CC,SAA3C,EAAsDC,OAAtD,EAA+D;EAC7D;EACA;EACAV,yBAAyB;EACzB,IAAIW,WAAW,GAAGR,mBAAmB,EAArC;EACA,IAAIS,KAAK,GAAGV,0BAA0B,CAACM,QAAD,EAAWC,SAAX,EAAsBC,OAAO,IAAIA,OAAO,CAACG,kBAAnB,GAAwCH,OAAO,CAACG,kBAAhD,GAAqE;IAC/HC,KAAK,EAAE;EADwH,CAA3F,CAAtC;EAGA,IAAIC,IAAI,GAAGd,oBAAoB,CAAC;IAC9Be,oBAAoB,EAAE,oBADQ;IAE9BC,QAAQ,EAAEP,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACO,QAFtC;IAG9BC,eAAe,EAAEb,UAAU,CAACM,WAAD,EAAcC,KAAd,CAHG;IAI9BO,WAAW,EAAET,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACS,WAJzC;IAK9BP,KAAK,EAAEA,KALuB;IAM9BQ,YAAY,EAAEV,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACW;EAN1C,CAAD,CAA/B;EAQA,OAAON,IAAP;AACD;;AAED,SAASO,gBAAT,CAA0Bd,QAA1B,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwD;EACtD,IAAIa,IAAI,GAAG1B,mBAAmB,CAAC2B,GAApB,EAAX;;EAEA,IAAID,IAAJ,EAAU;IACR,OAAOA,IAAI,CAACD,gBAAL,CAAsBd,QAAtB,EAAgCC,SAAhC,EAA2CC,OAA3C,CAAP;EACD,CAFD,MAEO;IACL;IACA,OAAOH,uBAAuB,CAACC,QAAD,EAAWC,SAAX,EAAsBC,OAAtB,CAA9B;EACD;AACF;;AAEDe,MAAM,CAACC,OAAP,GAAiBJ,gBAAjB"},"metadata":{},"sourceType":"script"}