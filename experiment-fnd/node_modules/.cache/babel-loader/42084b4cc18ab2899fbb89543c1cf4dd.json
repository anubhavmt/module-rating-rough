{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\"); // The type of a graphql`...` tagged template expression.\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\n\n\nfunction graphql(strings) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`. Note also that there cannot be ' + 'a space between graphql and the backtick that follows.') : invariant(false) : void 0;\n}\n\nfunction getNode(taggedNode) {\n  var node = taggedNode;\n\n  if (typeof node === 'function') {\n    node = node();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayGraphQLTag: node `%s` unexpectedly wrapped in a function.', node.kind === 'Fragment' ? node.name : node.operation.name) : void 0;\n  } else if (node[\"default\"]) {\n    // Support for languages that work (best) with ES6 modules, such as TypeScript.\n    node = node[\"default\"];\n  }\n\n  return node;\n}\n\nfunction isFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.FRAGMENT;\n}\n\nfunction isRequest(node) {\n  var request = getNode(node);\n  return typeof request === 'object' && request !== null && request.kind === RelayConcreteNode.REQUEST;\n}\n\nfunction isUpdatableQuery(node) {\n  var updatableQuery = getNode(node);\n  return typeof updatableQuery === 'object' && updatableQuery !== null && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;\n}\n\nfunction isInlineDataFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;\n}\n\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\n\nfunction getPaginationFragment(taggedNode) {\n  var _fragment$metadata;\n\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.refetch;\n  var connection = refetch === null || refetch === void 0 ? void 0 : refetch.connection;\n\n  if (refetch === null || typeof refetch !== 'object' || connection === null || typeof connection !== 'object') {\n    return null;\n  }\n\n  return fragment;\n}\n\nfunction getRefetchableFragment(taggedNode) {\n  var _fragment$metadata2;\n\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata2 = fragment.metadata) === null || _fragment$metadata2 === void 0 ? void 0 : _fragment$metadata2.refetch;\n\n  if (refetch === null || typeof refetch !== 'object') {\n    return null;\n  }\n\n  return fragment;\n}\n\nfunction getRequest(taggedNode) {\n  var request = getNode(taggedNode);\n  !isRequest(request) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(request)) : invariant(false) : void 0;\n  return request;\n}\n\nfunction getUpdatableQuery(taggedNode) {\n  var updatableQuery = getNode(taggedNode);\n  !isUpdatableQuery(updatableQuery) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(updatableQuery)) : invariant(false) : void 0;\n  return updatableQuery;\n}\n\nfunction getInlineDataFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isInlineDataFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected an inline data fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\n\nmodule.exports = {\n  getFragment: getFragment,\n  getNode: getNode,\n  getPaginationFragment: getPaginationFragment,\n  getRefetchableFragment: getRefetchableFragment,\n  getRequest: getRequest,\n  getUpdatableQuery: getUpdatableQuery,\n  getInlineDataFragment: getInlineDataFragment,\n  graphql: graphql,\n  isFragment: isFragment,\n  isRequest: isRequest,\n  isUpdatableQuery: isUpdatableQuery,\n  isInlineDataFragment: isInlineDataFragment\n};","map":{"version":3,"names":["RelayConcreteNode","require","invariant","warning","graphql","strings","process","env","NODE_ENV","getNode","taggedNode","node","kind","name","operation","isFragment","fragment","FRAGMENT","isRequest","request","REQUEST","isUpdatableQuery","updatableQuery","UPDATABLE_QUERY","isInlineDataFragment","INLINE_DATA_FRAGMENT","getFragment","JSON","stringify","getPaginationFragment","_fragment$metadata","refetch","metadata","connection","getRefetchableFragment","_fragment$metadata2","getRequest","getUpdatableQuery","getInlineDataFragment","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/query/GraphQLTag.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\n\nvar invariant = require('invariant');\n\nvar warning = require(\"fbjs/lib/warning\"); // The type of a graphql`...` tagged template expression.\n\n\n/**\n * Runtime function to correspond to the `graphql` tagged template function.\n * All calls to this function should be transformed by the plugin.\n */\nfunction graphql(strings) {\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'graphql: Unexpected invocation at runtime. Either the Babel transform ' + 'was not set up, or it failed to identify this call site. Make sure it ' + 'is being used verbatim as `graphql`. Note also that there cannot be ' + 'a space between graphql and the backtick that follows.') : invariant(false) : void 0;\n}\n\nfunction getNode(taggedNode) {\n  var node = taggedNode;\n\n  if (typeof node === 'function') {\n    node = node();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayGraphQLTag: node `%s` unexpectedly wrapped in a function.', node.kind === 'Fragment' ? node.name : node.operation.name) : void 0;\n  } else if (node[\"default\"]) {\n    // Support for languages that work (best) with ES6 modules, such as TypeScript.\n    node = node[\"default\"];\n  }\n\n  return node;\n}\n\nfunction isFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.FRAGMENT;\n}\n\nfunction isRequest(node) {\n  var request = getNode(node);\n  return typeof request === 'object' && request !== null && request.kind === RelayConcreteNode.REQUEST;\n}\n\nfunction isUpdatableQuery(node) {\n  var updatableQuery = getNode(node);\n  return typeof updatableQuery === 'object' && updatableQuery !== null && updatableQuery.kind === RelayConcreteNode.UPDATABLE_QUERY;\n}\n\nfunction isInlineDataFragment(node) {\n  var fragment = getNode(node);\n  return typeof fragment === 'object' && fragment !== null && fragment.kind === RelayConcreteNode.INLINE_DATA_FRAGMENT;\n}\n\nfunction getFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\n\nfunction getPaginationFragment(taggedNode) {\n  var _fragment$metadata;\n\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata = fragment.metadata) === null || _fragment$metadata === void 0 ? void 0 : _fragment$metadata.refetch;\n  var connection = refetch === null || refetch === void 0 ? void 0 : refetch.connection;\n\n  if (refetch === null || typeof refetch !== 'object' || connection === null || typeof connection !== 'object') {\n    return null;\n  }\n\n  return fragment;\n}\n\nfunction getRefetchableFragment(taggedNode) {\n  var _fragment$metadata2;\n\n  var fragment = getFragment(taggedNode);\n  var refetch = (_fragment$metadata2 = fragment.metadata) === null || _fragment$metadata2 === void 0 ? void 0 : _fragment$metadata2.refetch;\n\n  if (refetch === null || typeof refetch !== 'object') {\n    return null;\n  }\n\n  return fragment;\n}\n\nfunction getRequest(taggedNode) {\n  var request = getNode(taggedNode);\n  !isRequest(request) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(request)) : invariant(false) : void 0;\n  return request;\n}\n\nfunction getUpdatableQuery(taggedNode) {\n  var updatableQuery = getNode(taggedNode);\n  !isUpdatableQuery(updatableQuery) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected a request, got `%s`.', JSON.stringify(updatableQuery)) : invariant(false) : void 0;\n  return updatableQuery;\n}\n\nfunction getInlineDataFragment(taggedNode) {\n  var fragment = getNode(taggedNode);\n  !isInlineDataFragment(fragment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'GraphQLTag: Expected an inline data fragment, got `%s`.', JSON.stringify(fragment)) : invariant(false) : void 0;\n  return fragment;\n}\n\nmodule.exports = {\n  getFragment: getFragment,\n  getNode: getNode,\n  getPaginationFragment: getPaginationFragment,\n  getRefetchableFragment: getRefetchableFragment,\n  getRequest: getRequest,\n  getUpdatableQuery: getUpdatableQuery,\n  getInlineDataFragment: getInlineDataFragment,\n  graphql: graphql,\n  isFragment: isFragment,\n  isRequest: isRequest,\n  isUpdatableQuery: isUpdatableQuery,\n  isInlineDataFragment: isInlineDataFragment\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}