{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\n\nvar _require = require('../store/RelayRecordState'),\n    EXISTENT = _require.EXISTENT;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for records\n * in a record source.\n *\n * Modifications are applied to fresh copies of records:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n */\n\n\nvar RelayRecordSourceMutator = /*#__PURE__*/function () {\n  function RelayRecordSourceMutator(base, sink) {\n    this.__sources = [sink, base];\n    this._base = base;\n    this._sink = sink;\n  }\n  /**\n   * **UNSTABLE**\n   * This method is likely to be removed in an upcoming release\n   * and should not be relied upon.\n   * TODO T41593196: Remove unstable_getRawRecordWithChanges\n   */\n\n\n  var _proto = RelayRecordSourceMutator.prototype;\n\n  _proto.unstable_getRawRecordWithChanges = function unstable_getRawRecordWithChanges(dataID) {\n    var baseRecord = this._base.get(dataID);\n\n    var sinkRecord = this._sink.get(dataID);\n\n    if (sinkRecord === undefined) {\n      if (baseRecord == null) {\n        return baseRecord;\n      }\n\n      var nextRecord = RelayModernRecord.clone(baseRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(nextRecord);\n      }\n\n      return nextRecord;\n    } else if (sinkRecord === null) {\n      return null;\n    } else if (baseRecord != null) {\n      var _nextRecord = RelayModernRecord.update(baseRecord, sinkRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        if (_nextRecord !== baseRecord) {\n          // Prevent mutation of a record from outside the store.\n          RelayModernRecord.freeze(_nextRecord);\n        }\n      }\n\n      return _nextRecord;\n    } else {\n      var _nextRecord2 = RelayModernRecord.clone(sinkRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(_nextRecord2);\n      }\n\n      return _nextRecord2;\n    }\n  };\n\n  _proto._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n\n      !baseRecord ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID) : invariant(false) : void 0;\n      sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord));\n\n      this._sink.set(dataID, sinkRecord);\n    }\n\n    return sinkRecord;\n  };\n\n  _proto.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n\n    var baseSource = this._base.get(sourceID);\n\n    !(sinkSource || baseSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID) : invariant(false) : void 0;\n\n    var sink = this._getSinkRecord(sinkID);\n\n    if (baseSource) {\n      RelayModernRecord.copyFields(baseSource, sink);\n    }\n\n    if (sinkSource) {\n      RelayModernRecord.copyFields(sinkSource, sink);\n    }\n  };\n\n  _proto.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    var sink = this._getSinkRecord(sinkID);\n\n    RelayModernRecord.copyFields(record, sink);\n  };\n\n  _proto.create = function create(dataID, typeName) {\n    !(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID) : invariant(false) : void 0;\n    var record = RelayModernRecord.create(dataID, typeName);\n\n    this._sink.set(dataID, record);\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n\n  _proto.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        return RelayModernRecord.getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var value = RelayModernRecord.getValue(record, storageKey);\n\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setValue = function setValue(dataID, storageKey, value) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setValue(sinkRecord, storageKey, value);\n  };\n\n  _proto.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);\n  };\n\n  _proto.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n  };\n\n  return RelayRecordSourceMutator;\n}();\n\nmodule.exports = RelayRecordSourceMutator;","map":{"version":3,"names":["RelayModernRecord","require","_require","EXISTENT","invariant","RelayRecordSourceMutator","base","sink","__sources","_base","_sink","_proto","prototype","unstable_getRawRecordWithChanges","dataID","baseRecord","get","sinkRecord","undefined","nextRecord","clone","process","env","NODE_ENV","freeze","_nextRecord","update","_nextRecord2","_getSinkRecord","create","getType","set","copyFields","sourceID","sinkID","sinkSource","baseSource","copyFieldsFromRecord","record","typeName","getStatus","_delete","has","ii","length","getValue","storageKey","value","setValue","getLinkedRecordID","linkedID","setLinkedRecordID","getLinkedRecordIDs","linkedIDs","setLinkedRecordIDs","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/mutations/RelayRecordSourceMutator.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\n\nvar _require = require('../store/RelayRecordState'),\n    EXISTENT = _require.EXISTENT;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * Wrapper API that is an amalgam of the `RelayModernRecord` API and\n * `MutableRecordSource` interface, implementing copy-on-write semantics for records\n * in a record source.\n *\n * Modifications are applied to fresh copies of records:\n * - Records in `base` are never modified.\n * - Modifications cause a fresh version of a record to be created in `sink`.\n *   These sink records contain only modified fields.\n */\n\n\nvar RelayRecordSourceMutator = /*#__PURE__*/function () {\n  function RelayRecordSourceMutator(base, sink) {\n    this.__sources = [sink, base];\n    this._base = base;\n    this._sink = sink;\n  }\n  /**\n   * **UNSTABLE**\n   * This method is likely to be removed in an upcoming release\n   * and should not be relied upon.\n   * TODO T41593196: Remove unstable_getRawRecordWithChanges\n   */\n\n\n  var _proto = RelayRecordSourceMutator.prototype;\n\n  _proto.unstable_getRawRecordWithChanges = function unstable_getRawRecordWithChanges(dataID) {\n    var baseRecord = this._base.get(dataID);\n\n    var sinkRecord = this._sink.get(dataID);\n\n    if (sinkRecord === undefined) {\n      if (baseRecord == null) {\n        return baseRecord;\n      }\n\n      var nextRecord = RelayModernRecord.clone(baseRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(nextRecord);\n      }\n\n      return nextRecord;\n    } else if (sinkRecord === null) {\n      return null;\n    } else if (baseRecord != null) {\n      var _nextRecord = RelayModernRecord.update(baseRecord, sinkRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        if (_nextRecord !== baseRecord) {\n          // Prevent mutation of a record from outside the store.\n          RelayModernRecord.freeze(_nextRecord);\n        }\n      }\n\n      return _nextRecord;\n    } else {\n      var _nextRecord2 = RelayModernRecord.clone(sinkRecord);\n\n      if (process.env.NODE_ENV !== \"production\") {\n        // Prevent mutation of a record from outside the store.\n        RelayModernRecord.freeze(_nextRecord2);\n      }\n\n      return _nextRecord2;\n    }\n  };\n\n  _proto._getSinkRecord = function _getSinkRecord(dataID) {\n    var sinkRecord = this._sink.get(dataID);\n\n    if (!sinkRecord) {\n      var baseRecord = this._base.get(dataID);\n\n      !baseRecord ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator: Cannot modify non-existent record `%s`.', dataID) : invariant(false) : void 0;\n      sinkRecord = RelayModernRecord.create(dataID, RelayModernRecord.getType(baseRecord));\n\n      this._sink.set(dataID, sinkRecord);\n    }\n\n    return sinkRecord;\n  };\n\n  _proto.copyFields = function copyFields(sourceID, sinkID) {\n    var sinkSource = this._sink.get(sourceID);\n\n    var baseSource = this._base.get(sourceID);\n\n    !(sinkSource || baseSource) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#copyFields(): Cannot copy fields from ' + 'non-existent record `%s`.', sourceID) : invariant(false) : void 0;\n\n    var sink = this._getSinkRecord(sinkID);\n\n    if (baseSource) {\n      RelayModernRecord.copyFields(baseSource, sink);\n    }\n\n    if (sinkSource) {\n      RelayModernRecord.copyFields(sinkSource, sink);\n    }\n  };\n\n  _proto.copyFieldsFromRecord = function copyFieldsFromRecord(record, sinkID) {\n    var sink = this._getSinkRecord(sinkID);\n\n    RelayModernRecord.copyFields(record, sink);\n  };\n\n  _proto.create = function create(dataID, typeName) {\n    !(this._base.getStatus(dataID) !== EXISTENT && this._sink.getStatus(dataID) !== EXISTENT) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceMutator#create(): Cannot create a record with id ' + '`%s`, this record already exists.', dataID) : invariant(false) : void 0;\n    var record = RelayModernRecord.create(dataID, typeName);\n\n    this._sink.set(dataID, record);\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    return this._sink.has(dataID) ? this._sink.getStatus(dataID) : this._base.getStatus(dataID);\n  };\n\n  _proto.getType = function getType(dataID) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        return RelayModernRecord.getType(record);\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.getValue = function getValue(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var value = RelayModernRecord.getValue(record, storageKey);\n\n        if (value !== undefined) {\n          return value;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setValue = function setValue(dataID, storageKey, value) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setValue(sinkRecord, storageKey, value);\n  };\n\n  _proto.getLinkedRecordID = function getLinkedRecordID(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n\n        if (linkedID !== undefined) {\n          return linkedID;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setLinkedRecordID = function setLinkedRecordID(dataID, storageKey, linkedID) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setLinkedRecordID(sinkRecord, storageKey, linkedID);\n  };\n\n  _proto.getLinkedRecordIDs = function getLinkedRecordIDs(dataID, storageKey) {\n    for (var ii = 0; ii < this.__sources.length; ii++) {\n      var record = this.__sources[ii].get(dataID);\n\n      if (record) {\n        var linkedIDs = RelayModernRecord.getLinkedRecordIDs(record, storageKey);\n\n        if (linkedIDs !== undefined) {\n          return linkedIDs;\n        }\n      } else if (record === null) {\n        return null;\n      }\n    }\n  };\n\n  _proto.setLinkedRecordIDs = function setLinkedRecordIDs(dataID, storageKey, linkedIDs) {\n    var sinkRecord = this._getSinkRecord(dataID);\n\n    RelayModernRecord.setLinkedRecordIDs(sinkRecord, storageKey, linkedIDs);\n  };\n\n  return RelayRecordSourceMutator;\n}();\n\nmodule.exports = RelayRecordSourceMutator;"],"mappings":"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"},"metadata":{},"sourceType":"script"}