{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\n\nvar _require = require('react'),\n    useEffect = _require.useEffect;\n\nvar _require2 = require('relay-runtime'),\n    requestSubscription = _require2.requestSubscription;\n\nfunction useSubscription(config, requestSubscriptionFn) {\n  // N.B. this will re-subscribe every render if config or requestSubscriptionFn\n  // are not memoized.\n  // Please do not pass an object defined in-line.\n  var actualRequestSubscription = requestSubscriptionFn !== null && requestSubscriptionFn !== void 0 ? requestSubscriptionFn : requestSubscription;\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    var _actualRequestSubscri = actualRequestSubscription(environment, config),\n        dispose = _actualRequestSubscri.dispose; // $FlowFixMe[incompatible-call]\n\n\n    return dispose;\n  }, [environment, config, actualRequestSubscription]);\n}\n\nmodule.exports = useSubscription;","map":{"version":3,"names":["useRelayEnvironment","require","_require","useEffect","_require2","requestSubscription","useSubscription","config","requestSubscriptionFn","actualRequestSubscription","environment","_actualRequestSubscri","dispose","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/react-relay/lib/relay-hooks/useSubscription.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar useRelayEnvironment = require('./useRelayEnvironment');\n\nvar _require = require('react'),\n    useEffect = _require.useEffect;\n\nvar _require2 = require('relay-runtime'),\n    requestSubscription = _require2.requestSubscription;\n\nfunction useSubscription(config, requestSubscriptionFn) {\n  // N.B. this will re-subscribe every render if config or requestSubscriptionFn\n  // are not memoized.\n  // Please do not pass an object defined in-line.\n  var actualRequestSubscription = requestSubscriptionFn !== null && requestSubscriptionFn !== void 0 ? requestSubscriptionFn : requestSubscription;\n  var environment = useRelayEnvironment();\n  useEffect(function () {\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    var _actualRequestSubscri = actualRequestSubscription(environment, config),\n        dispose = _actualRequestSubscri.dispose; // $FlowFixMe[incompatible-call]\n\n\n    return dispose;\n  }, [environment, config, actualRequestSubscription]);\n}\n\nmodule.exports = useSubscription;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,uBAAD,CAAjC;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,OAAD,CAAtB;AAAA,IACIE,SAAS,GAAGD,QAAQ,CAACC,SADzB;;AAGA,IAAIC,SAAS,GAAGH,OAAO,CAAC,eAAD,CAAvB;AAAA,IACII,mBAAmB,GAAGD,SAAS,CAACC,mBADpC;;AAGA,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,qBAAjC,EAAwD;EACtD;EACA;EACA;EACA,IAAIC,yBAAyB,GAAGD,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,KAAK,KAAK,CAAjE,GAAqEA,qBAArE,GAA6FH,mBAA7H;EACA,IAAIK,WAAW,GAAGV,mBAAmB,EAArC;EACAG,SAAS,CAAC,YAAY;IACpB;IACA,IAAIQ,qBAAqB,GAAGF,yBAAyB,CAACC,WAAD,EAAcH,MAAd,CAArD;IAAA,IACIK,OAAO,GAAGD,qBAAqB,CAACC,OADpC,CAFoB,CAGyB;;;IAG7C,OAAOA,OAAP;EACD,CAPQ,EAON,CAACF,WAAD,EAAcH,MAAd,EAAsBE,yBAAtB,CAPM,CAAT;AAQD;;AAEDI,MAAM,CAACC,OAAP,GAAiBR,eAAjB"},"metadata":{},"sourceType":"script"}