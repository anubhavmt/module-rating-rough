{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n    getUpdatableQuery = _require.getUpdatableQuery;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getArgumentValues = _require2.getArgumentValues;\n\nvar _require3 = require('./createUpdatableProxy'),\n    createUpdatableProxy = _require3.createUpdatableProxy;\n\nvar nonUpdatableKeys = ['id', '__id', '__typename', 'js'];\n\nfunction readUpdatableQuery_EXPERIMENTAL(query, variables, proxy) {\n  var updatableQuery = getUpdatableQuery(query);\n  return {\n    updatableData: createUpdatableProxy(proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy)\n  };\n}\n\nmodule.exports = {\n  readUpdatableQuery_EXPERIMENTAL: readUpdatableQuery_EXPERIMENTAL\n};","map":{"version":3,"names":["_require","require","getUpdatableQuery","_require2","getArgumentValues","_require3","createUpdatableProxy","nonUpdatableKeys","readUpdatableQuery_EXPERIMENTAL","query","variables","proxy","updatableQuery","updatableData","getRoot","fragment","selections","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/mutations/readUpdatableQuery_EXPERIMENTAL.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @emails oncall+relay\n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n    getUpdatableQuery = _require.getUpdatableQuery;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getArgumentValues = _require2.getArgumentValues;\n\nvar _require3 = require('./createUpdatableProxy'),\n    createUpdatableProxy = _require3.createUpdatableProxy;\n\nvar nonUpdatableKeys = ['id', '__id', '__typename', 'js'];\n\nfunction readUpdatableQuery_EXPERIMENTAL(query, variables, proxy) {\n  var updatableQuery = getUpdatableQuery(query);\n  return {\n    updatableData: createUpdatableProxy(proxy.getRoot(), variables, updatableQuery.fragment.selections, proxy)\n  };\n}\n\nmodule.exports = {\n  readUpdatableQuery_EXPERIMENTAL: readUpdatableQuery_EXPERIMENTAL\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAtB;AAAA,IACIC,iBAAiB,GAAGF,QAAQ,CAACE,iBADjC;;AAGA,IAAIC,SAAS,GAAGF,OAAO,CAAC,0BAAD,CAAvB;AAAA,IACIG,iBAAiB,GAAGD,SAAS,CAACC,iBADlC;;AAGA,IAAIC,SAAS,GAAGJ,OAAO,CAAC,wBAAD,CAAvB;AAAA,IACIK,oBAAoB,GAAGD,SAAS,CAACC,oBADrC;;AAGA,IAAIC,gBAAgB,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,YAAf,EAA6B,IAA7B,CAAvB;;AAEA,SAASC,+BAAT,CAAyCC,KAAzC,EAAgDC,SAAhD,EAA2DC,KAA3D,EAAkE;EAChE,IAAIC,cAAc,GAAGV,iBAAiB,CAACO,KAAD,CAAtC;EACA,OAAO;IACLI,aAAa,EAAEP,oBAAoB,CAACK,KAAK,CAACG,OAAN,EAAD,EAAkBJ,SAAlB,EAA6BE,cAAc,CAACG,QAAf,CAAwBC,UAArD,EAAiEL,KAAjE;EAD9B,CAAP;AAGD;;AAEDM,MAAM,CAACC,OAAP,GAAiB;EACfV,+BAA+B,EAAEA;AADlB,CAAjB"},"metadata":{},"sourceType":"script"}