{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n\nvar PreloadableQueryRegistry = /*#__PURE__*/function () {\n  function PreloadableQueryRegistry() {\n    this._preloadableQueries = new Map();\n    this._callbacks = new Map();\n  }\n\n  var _proto = PreloadableQueryRegistry.prototype;\n\n  _proto.set = function set(key, value) {\n    this._preloadableQueries.set(key, value);\n\n    var callbacks = this._callbacks.get(key);\n\n    if (callbacks != null) {\n      callbacks.forEach(function (cb) {\n        try {\n          cb(value);\n        } catch (e) {\n          // We do *not* want to throw in this tick, as this callback is executed\n          // while a query is required for the very first time.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    }\n  };\n\n  _proto.get = function get(key) {\n    return this._preloadableQueries.get(key);\n  };\n\n  _proto.onLoad = function onLoad(key, callback) {\n    var _this$_callbacks$get;\n\n    var callbacks = (_this$_callbacks$get = this._callbacks.get(key)) !== null && _this$_callbacks$get !== void 0 ? _this$_callbacks$get : new Set();\n    callbacks.add(callback);\n\n    var dispose = function dispose() {\n      callbacks[\"delete\"](callback);\n    };\n\n    this._callbacks.set(key, callbacks);\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.clear = function clear() {\n    this._preloadableQueries.clear();\n  };\n\n  return PreloadableQueryRegistry;\n}();\n\nvar preloadableQueryRegistry = new PreloadableQueryRegistry();\nmodule.exports = preloadableQueryRegistry;","map":{"version":3,"names":["PreloadableQueryRegistry","_preloadableQueries","Map","_callbacks","_proto","prototype","set","key","value","callbacks","get","forEach","cb","e","setTimeout","onLoad","callback","_this$_callbacks$get","Set","add","dispose","clear","preloadableQueryRegistry","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/query/PreloadableQueryRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n\nvar PreloadableQueryRegistry = /*#__PURE__*/function () {\n  function PreloadableQueryRegistry() {\n    this._preloadableQueries = new Map();\n    this._callbacks = new Map();\n  }\n\n  var _proto = PreloadableQueryRegistry.prototype;\n\n  _proto.set = function set(key, value) {\n    this._preloadableQueries.set(key, value);\n\n    var callbacks = this._callbacks.get(key);\n\n    if (callbacks != null) {\n      callbacks.forEach(function (cb) {\n        try {\n          cb(value);\n        } catch (e) {\n          // We do *not* want to throw in this tick, as this callback is executed\n          // while a query is required for the very first time.\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      });\n    }\n  };\n\n  _proto.get = function get(key) {\n    return this._preloadableQueries.get(key);\n  };\n\n  _proto.onLoad = function onLoad(key, callback) {\n    var _this$_callbacks$get;\n\n    var callbacks = (_this$_callbacks$get = this._callbacks.get(key)) !== null && _this$_callbacks$get !== void 0 ? _this$_callbacks$get : new Set();\n    callbacks.add(callback);\n\n    var dispose = function dispose() {\n      callbacks[\"delete\"](callback);\n    };\n\n    this._callbacks.set(key, callbacks);\n\n    return {\n      dispose: dispose\n    };\n  };\n\n  _proto.clear = function clear() {\n    this._preloadableQueries.clear();\n  };\n\n  return PreloadableQueryRegistry;\n}();\n\nvar preloadableQueryRegistry = new PreloadableQueryRegistry();\nmodule.exports = preloadableQueryRegistry;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,wBAAwB,GAAG,aAAa,YAAY;EACtD,SAASA,wBAAT,GAAoC;IAClC,KAAKC,mBAAL,GAA2B,IAAIC,GAAJ,EAA3B;IACA,KAAKC,UAAL,GAAkB,IAAID,GAAJ,EAAlB;EACD;;EAED,IAAIE,MAAM,GAAGJ,wBAAwB,CAACK,SAAtC;;EAEAD,MAAM,CAACE,GAAP,GAAa,SAASA,GAAT,CAAaC,GAAb,EAAkBC,KAAlB,EAAyB;IACpC,KAAKP,mBAAL,CAAyBK,GAAzB,CAA6BC,GAA7B,EAAkCC,KAAlC;;IAEA,IAAIC,SAAS,GAAG,KAAKN,UAAL,CAAgBO,GAAhB,CAAoBH,GAApB,CAAhB;;IAEA,IAAIE,SAAS,IAAI,IAAjB,EAAuB;MACrBA,SAAS,CAACE,OAAV,CAAkB,UAAUC,EAAV,EAAc;QAC9B,IAAI;UACFA,EAAE,CAACJ,KAAD,CAAF;QACD,CAFD,CAEE,OAAOK,CAAP,EAAU;UACV;UACA;UACAC,UAAU,CAAC,YAAY;YACrB,MAAMD,CAAN;UACD,CAFS,EAEP,CAFO,CAAV;QAGD;MACF,CAVD;IAWD;EACF,CAlBD;;EAoBAT,MAAM,CAACM,GAAP,GAAa,SAASA,GAAT,CAAaH,GAAb,EAAkB;IAC7B,OAAO,KAAKN,mBAAL,CAAyBS,GAAzB,CAA6BH,GAA7B,CAAP;EACD,CAFD;;EAIAH,MAAM,CAACW,MAAP,GAAgB,SAASA,MAAT,CAAgBR,GAAhB,EAAqBS,QAArB,EAA+B;IAC7C,IAAIC,oBAAJ;;IAEA,IAAIR,SAAS,GAAG,CAACQ,oBAAoB,GAAG,KAAKd,UAAL,CAAgBO,GAAhB,CAAoBH,GAApB,CAAxB,MAAsD,IAAtD,IAA8DU,oBAAoB,KAAK,KAAK,CAA5F,GAAgGA,oBAAhG,GAAuH,IAAIC,GAAJ,EAAvI;IACAT,SAAS,CAACU,GAAV,CAAcH,QAAd;;IAEA,IAAII,OAAO,GAAG,SAASA,OAAT,GAAmB;MAC/BX,SAAS,CAAC,QAAD,CAAT,CAAoBO,QAApB;IACD,CAFD;;IAIA,KAAKb,UAAL,CAAgBG,GAAhB,CAAoBC,GAApB,EAAyBE,SAAzB;;IAEA,OAAO;MACLW,OAAO,EAAEA;IADJ,CAAP;EAGD,CAfD;;EAiBAhB,MAAM,CAACiB,KAAP,GAAe,SAASA,KAAT,GAAiB;IAC9B,KAAKpB,mBAAL,CAAyBoB,KAAzB;EACD,CAFD;;EAIA,OAAOrB,wBAAP;AACD,CAtD2C,EAA5C;;AAwDA,IAAIsB,wBAAwB,GAAG,IAAItB,wBAAJ,EAA/B;AACAuB,MAAM,CAACC,OAAP,GAAiBF,wBAAjB"},"metadata":{},"sourceType":"script"}