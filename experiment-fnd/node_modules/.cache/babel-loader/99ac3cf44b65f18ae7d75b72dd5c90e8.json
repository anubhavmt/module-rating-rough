{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getStableStorageKey = _require2.getStableStorageKey;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\n\n\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n\n  var _proto = RelayRecordProxy.prototype;\n\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n\n    this._mutator.setValue(this._dataID, storageKey, value);\n\n    return this;\n  };\n\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n\n    return this;\n  };\n\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n\n    if (!linkedRecord) {\n      var _this$_source$get;\n\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey); // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n\n    return linkedRecord;\n  };\n\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n\n    return this;\n  };\n\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n\n  return RelayRecordProxy;\n}();\n\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\n\nmodule.exports = RelayRecordProxy;","map":{"version":3,"names":["_require","require","generateClientID","_require2","getStableStorageKey","invariant","RelayRecordProxy","source","mutator","dataID","_dataID","_mutator","_source","_proto","prototype","copyFieldsFrom","copyFields","getDataID","getType","type","process","env","NODE_ENV","getValue","name","args","storageKey","setValue","value","isValidLeafValue","JSON","stringify","getLinkedRecord","linkedID","getLinkedRecordID","get","setLinkedRecord","record","setLinkedRecordID","getOrCreateLinkedRecord","typeName","linkedRecord","_this$_source$get","clientID","create","getLinkedRecords","_this","linkedIDs","getLinkedRecordIDs","map","setLinkedRecords","records","Array","isArray","setLinkedRecordIDs","invalidateRecord","markIDForInvalidation","every","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/mutations/RelayRecordProxy.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('../store/ClientID'),\n    generateClientID = _require.generateClientID;\n\nvar _require2 = require('../store/RelayStoreUtils'),\n    getStableStorageKey = _require2.getStableStorageKey;\n\nvar invariant = require('invariant');\n/**\n * @internal\n *\n * A helper class for manipulating a given record from a record source via an\n * imperative/OO-style API.\n */\n\n\nvar RelayRecordProxy = /*#__PURE__*/function () {\n  function RelayRecordProxy(source, mutator, dataID) {\n    this._dataID = dataID;\n    this._mutator = mutator;\n    this._source = source;\n  }\n\n  var _proto = RelayRecordProxy.prototype;\n\n  _proto.copyFieldsFrom = function copyFieldsFrom(source) {\n    this._mutator.copyFields(source.getDataID(), this._dataID);\n  };\n\n  _proto.getDataID = function getDataID() {\n    return this._dataID;\n  };\n\n  _proto.getType = function getType() {\n    var type = this._mutator.getType(this._dataID);\n\n    !(type != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy: Cannot get the type of deleted record `%s`.', this._dataID) : invariant(false) : void 0;\n    return type;\n  };\n\n  _proto.getValue = function getValue(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n    return this._mutator.getValue(this._dataID, storageKey);\n  };\n\n  _proto.setValue = function setValue(value, name, args) {\n    !isValidLeafValue(value) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setValue(): Expected a scalar or array of scalars, ' + 'got `%s`.', JSON.stringify(value)) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n\n    this._mutator.setValue(this._dataID, storageKey, value);\n\n    return this;\n  };\n\n  _proto.getLinkedRecord = function getLinkedRecord(name, args) {\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedID = this._mutator.getLinkedRecordID(this._dataID, storageKey);\n\n    return linkedID != null ? this._source.get(linkedID) : linkedID;\n  };\n\n  _proto.setLinkedRecord = function setLinkedRecord(record, name, args) {\n    !(record instanceof RelayRecordProxy) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecord(): Expected a record, got `%s`.', record) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedID = record.getDataID();\n\n    this._mutator.setLinkedRecordID(this._dataID, storageKey, linkedID);\n\n    return this;\n  };\n\n  _proto.getOrCreateLinkedRecord = function getOrCreateLinkedRecord(name, typeName, args) {\n    var linkedRecord = this.getLinkedRecord(name, args);\n\n    if (!linkedRecord) {\n      var _this$_source$get;\n\n      var storageKey = getStableStorageKey(name, args);\n      var clientID = generateClientID(this.getDataID(), storageKey); // NOTE: it's possible that a client record for this field exists\n      // but the field itself was unset.\n\n      linkedRecord = (_this$_source$get = this._source.get(clientID)) !== null && _this$_source$get !== void 0 ? _this$_source$get : this._source.create(clientID, typeName);\n      this.setLinkedRecord(linkedRecord, name, args);\n    }\n\n    return linkedRecord;\n  };\n\n  _proto.getLinkedRecords = function getLinkedRecords(name, args) {\n    var _this = this;\n\n    var storageKey = getStableStorageKey(name, args);\n\n    var linkedIDs = this._mutator.getLinkedRecordIDs(this._dataID, storageKey);\n\n    if (linkedIDs == null) {\n      return linkedIDs;\n    }\n\n    return linkedIDs.map(function (linkedID) {\n      return linkedID != null ? _this._source.get(linkedID) : linkedID;\n    });\n  };\n\n  _proto.setLinkedRecords = function setLinkedRecords(records, name, args) {\n    !Array.isArray(records) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordProxy#setLinkedRecords(): Expected records to be an array, got `%s`.', records) : invariant(false) : void 0;\n    var storageKey = getStableStorageKey(name, args);\n    var linkedIDs = records.map(function (record) {\n      return record && record.getDataID();\n    });\n\n    this._mutator.setLinkedRecordIDs(this._dataID, storageKey, linkedIDs);\n\n    return this;\n  };\n\n  _proto.invalidateRecord = function invalidateRecord() {\n    this._source.markIDForInvalidation(this._dataID);\n  };\n\n  return RelayRecordProxy;\n}();\n\nfunction isValidLeafValue(value) {\n  return value == null || typeof value !== 'object' || Array.isArray(value) && value.every(isValidLeafValue);\n}\n\nmodule.exports = RelayRecordProxy;"],"mappings":"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"},"metadata":{},"sourceType":"script"}