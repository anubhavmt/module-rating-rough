{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./RelayModernRecord'),\n    getType = _require.getType;\n\nvar invariant = require('invariant'); // Reachable (client) executable definitions encountered while server component\n// rendering\n\n\nvar REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = 'executableDefinitions';\nvar REACT_FLIGHT_TREE_STORAGE_KEY = 'tree';\nvar REACT_FLIGHT_TYPE_NAME = 'ReactFlightComponent';\n\nfunction refineToReactFlightPayloadData(payload) {\n  if (payload == null || typeof payload !== 'object' || typeof payload.status !== 'string' || !Array.isArray(payload.tree) && payload.tree !== null || !Array.isArray(payload.queries) || !Array.isArray(payload.fragments) || !Array.isArray(payload.errors)) {\n    return null;\n  }\n\n  return payload;\n}\n\nfunction getReactFlightClientResponse(record) {\n  !(getType(record) === REACT_FLIGHT_TYPE_NAME) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getReactFlightClientResponse(): Expected a ReactFlightComponentRecord, ' + 'got %s.', record) : invariant(false) : void 0;\n  return record[REACT_FLIGHT_TREE_STORAGE_KEY];\n}\n\nmodule.exports = {\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY: REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY: REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME: REACT_FLIGHT_TYPE_NAME,\n  getReactFlightClientResponse: getReactFlightClientResponse,\n  refineToReactFlightPayloadData: refineToReactFlightPayloadData\n};","map":{"version":3,"names":["_require","require","getType","invariant","REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY","REACT_FLIGHT_TREE_STORAGE_KEY","REACT_FLIGHT_TYPE_NAME","refineToReactFlightPayloadData","payload","status","Array","isArray","tree","queries","fragments","errors","getReactFlightClientResponse","record","process","env","NODE_ENV","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/store/RelayStoreReactFlightUtils.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./RelayModernRecord'),\n    getType = _require.getType;\n\nvar invariant = require('invariant'); // Reachable (client) executable definitions encountered while server component\n// rendering\n\n\nvar REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY = 'executableDefinitions';\nvar REACT_FLIGHT_TREE_STORAGE_KEY = 'tree';\nvar REACT_FLIGHT_TYPE_NAME = 'ReactFlightComponent';\n\nfunction refineToReactFlightPayloadData(payload) {\n  if (payload == null || typeof payload !== 'object' || typeof payload.status !== 'string' || !Array.isArray(payload.tree) && payload.tree !== null || !Array.isArray(payload.queries) || !Array.isArray(payload.fragments) || !Array.isArray(payload.errors)) {\n    return null;\n  }\n\n  return payload;\n}\n\nfunction getReactFlightClientResponse(record) {\n  !(getType(record) === REACT_FLIGHT_TYPE_NAME) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'getReactFlightClientResponse(): Expected a ReactFlightComponentRecord, ' + 'got %s.', record) : invariant(false) : void 0;\n  return record[REACT_FLIGHT_TREE_STORAGE_KEY];\n}\n\nmodule.exports = {\n  REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY: REACT_FLIGHT_EXECUTABLE_DEFINITIONS_STORAGE_KEY,\n  REACT_FLIGHT_TREE_STORAGE_KEY: REACT_FLIGHT_TREE_STORAGE_KEY,\n  REACT_FLIGHT_TYPE_NAME: REACT_FLIGHT_TYPE_NAME,\n  getReactFlightClientResponse: getReactFlightClientResponse,\n  refineToReactFlightPayloadData: refineToReactFlightPayloadData\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAtB;AAAA,IACIC,OAAO,GAAGF,QAAQ,CAACE,OADvB;;AAGA,IAAIC,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB,C,CAAsC;AACtC;;;AAGA,IAAIG,+CAA+C,GAAG,uBAAtD;AACA,IAAIC,6BAA6B,GAAG,MAApC;AACA,IAAIC,sBAAsB,GAAG,sBAA7B;;AAEA,SAASC,8BAAT,CAAwCC,OAAxC,EAAiD;EAC/C,IAAIA,OAAO,IAAI,IAAX,IAAmB,OAAOA,OAAP,KAAmB,QAAtC,IAAkD,OAAOA,OAAO,CAACC,MAAf,KAA0B,QAA5E,IAAwF,CAACC,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACI,IAAtB,CAAD,IAAgCJ,OAAO,CAACI,IAAR,KAAiB,IAAzI,IAAiJ,CAACF,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACK,OAAtB,CAAlJ,IAAoL,CAACH,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACM,SAAtB,CAArL,IAAyN,CAACJ,KAAK,CAACC,OAAN,CAAcH,OAAO,CAACO,MAAtB,CAA9N,EAA6P;IAC3P,OAAO,IAAP;EACD;;EAED,OAAOP,OAAP;AACD;;AAED,SAASQ,4BAAT,CAAsCC,MAAtC,EAA8C;EAC5C,EAAEf,OAAO,CAACe,MAAD,CAAP,KAAoBX,sBAAtB,IAAgDY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCjB,SAAS,CAAC,KAAD,EAAQ,4EAA4E,SAApF,EAA+Fc,MAA/F,CAAjD,GAA0Jd,SAAS,CAAC,KAAD,CAAnN,GAA6N,KAAK,CAAlO;EACA,OAAOc,MAAM,CAACZ,6BAAD,CAAb;AACD;;AAEDgB,MAAM,CAACC,OAAP,GAAiB;EACflB,+CAA+C,EAAEA,+CADlC;EAEfC,6BAA6B,EAAEA,6BAFhB;EAGfC,sBAAsB,EAAEA,sBAHT;EAIfU,4BAA4B,EAAEA,4BAJf;EAKfT,8BAA8B,EAAEA;AALjB,CAAjB"},"metadata":{},"sourceType":"script"}