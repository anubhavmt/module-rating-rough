{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connectionInfo),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = []; // the type of data should come from a type parameter associated with ConcreteRequest,\n    // but ConcreteRequest does not contain a type parameter. Hence, we use a FlowFixMe.\n    // $FlowFixMe[incompatible-use] see above\n\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(deletedIDFieldName),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connectionKeys),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};","map":{"version":3,"names":["_interopRequireDefault","require","_createForOfIteratorHelper2","ConnectionHandler","warning","MutationTypes","Object","freeze","RANGE_ADD","RANGE_DELETE","NODE_DELETE","RangeOperations","APPEND","PREPEND","convert","configs","request","optimisticUpdater","updater","configOptimisticUpdates","configUpdates","forEach","config","type","nodeDeleteResult","nodeDelete","push","rangeAddResult","rangeAdd","rangeDeleteResult","rangeDelete","store","data","eachOptimisticUpdater","eachUpdater","deletedIDFieldName","rootField","getRootField","payload","deleteID","getValue","deleteIDs","Array","isArray","id","parentID","connectionInfo","edgeName","process","env","NODE_ENV","parent","get","serverEdge","getLinkedRecord","_iterator","_step","s","n","done","info","value","connection","getConnection","key","filters","clientEdge","buildConnectionEdge","rangeBehavior","insertEdgeAfter","insertEdgeBefore","err","e","f","connectionKeys","pathToConnection","deletedIDField","_iterator2","_step2","eachField","idObject","deleteNode","length","recordProxy","i","toString","_iterator3","_step3","_loop","fragment","selections","kind","name","module","exports"],"sources":["/Users/anubhavgupta/Documents/react_learning/experiment_schema_ratings/rating-frontent-with-gql/module-rating-rough/experiment-fnd/node_modules/relay-runtime/lib/mutations/RelayDeclarativeMutationConfig.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar ConnectionHandler = require('../handlers/connection/ConnectionHandler');\n\nvar warning = require(\"fbjs/lib/warning\");\n\nvar MutationTypes = Object.freeze({\n  RANGE_ADD: 'RANGE_ADD',\n  RANGE_DELETE: 'RANGE_DELETE',\n  NODE_DELETE: 'NODE_DELETE'\n});\nvar RangeOperations = Object.freeze({\n  APPEND: 'append',\n  PREPEND: 'prepend'\n});\n\nfunction convert(configs, request, optimisticUpdater, updater) {\n  var configOptimisticUpdates = optimisticUpdater ? [optimisticUpdater] : [];\n  var configUpdates = updater ? [updater] : [];\n  configs.forEach(function (config) {\n    switch (config.type) {\n      case 'NODE_DELETE':\n        var nodeDeleteResult = nodeDelete(config, request);\n\n        if (nodeDeleteResult) {\n          configOptimisticUpdates.push(nodeDeleteResult);\n          configUpdates.push(nodeDeleteResult);\n        }\n\n        break;\n\n      case 'RANGE_ADD':\n        var rangeAddResult = rangeAdd(config, request);\n\n        if (rangeAddResult) {\n          configOptimisticUpdates.push(rangeAddResult);\n          configUpdates.push(rangeAddResult);\n        }\n\n        break;\n\n      case 'RANGE_DELETE':\n        var rangeDeleteResult = rangeDelete(config, request);\n\n        if (rangeDeleteResult) {\n          configOptimisticUpdates.push(rangeDeleteResult);\n          configUpdates.push(rangeDeleteResult);\n        }\n\n        break;\n    }\n  });\n  return {\n    optimisticUpdater: function optimisticUpdater(store, data) {\n      configOptimisticUpdates.forEach(function (eachOptimisticUpdater) {\n        eachOptimisticUpdater(store, data);\n      });\n    },\n    updater: function updater(store, data) {\n      configUpdates.forEach(function (eachUpdater) {\n        eachUpdater(store, data);\n      });\n    }\n  };\n}\n\nfunction nodeDelete(config, request) {\n  var deletedIDFieldName = config.deletedIDFieldName;\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var deleteID = payload.getValue(deletedIDFieldName);\n    var deleteIDs = Array.isArray(deleteID) ? deleteID : [deleteID];\n    deleteIDs.forEach(function (id) {\n      if (id && typeof id === 'string') {\n        store[\"delete\"](id);\n      }\n    });\n  };\n}\n\nfunction rangeAdd(config, request) {\n  var parentID = config.parentID,\n      connectionInfo = config.connectionInfo,\n      edgeName = config.edgeName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_ADD ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!connectionInfo || !rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    var parent = store.get(parentID);\n\n    if (!parent) {\n      return;\n    }\n\n    var payload = store.getRootField(rootField);\n\n    if (!payload) {\n      return;\n    }\n\n    var serverEdge = payload.getLinkedRecord(edgeName);\n\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(connectionInfo),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var info = _step.value;\n\n        if (!serverEdge) {\n          continue;\n        }\n\n        var connection = ConnectionHandler.getConnection(parent, info.key, info.filters);\n\n        if (!connection) {\n          continue;\n        }\n\n        var clientEdge = ConnectionHandler.buildConnectionEdge(store, connection, serverEdge);\n\n        if (!clientEdge) {\n          continue;\n        }\n\n        switch (info.rangeBehavior) {\n          case 'append':\n            ConnectionHandler.insertEdgeAfter(connection, clientEdge);\n            break;\n\n          case 'prepend':\n            ConnectionHandler.insertEdgeBefore(connection, clientEdge);\n            break;\n\n          default:\n            process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_ADD range behavior `%s` ' + 'will not work as expected in RelayModern, supported range ' + \"behaviors are 'append', 'prepend'.\", info.rangeBehavior) : void 0;\n            break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  };\n}\n\nfunction rangeDelete(config, request) {\n  var parentID = config.parentID,\n      connectionKeys = config.connectionKeys,\n      pathToConnection = config.pathToConnection,\n      deletedIDFieldName = config.deletedIDFieldName;\n\n  if (!parentID) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: For mutation config RANGE_DELETE ' + 'to work you must include a parentID') : void 0;\n    return null;\n  }\n\n  var rootField = getRootField(request);\n\n  if (!rootField) {\n    return null;\n  }\n\n  return function (store, data) {\n    if (!data) {\n      return;\n    }\n\n    var deleteIDs = []; // the type of data should come from a type parameter associated with ConcreteRequest,\n    // but ConcreteRequest does not contain a type parameter. Hence, we use a FlowFixMe.\n    // $FlowFixMe[incompatible-use] see above\n\n    var deletedIDField = data[rootField];\n\n    if (deletedIDField && Array.isArray(deletedIDFieldName)) {\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(deletedIDFieldName),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var eachField = _step2.value;\n\n          if (deletedIDField && typeof deletedIDField === 'object') {\n            deletedIDField = deletedIDField[eachField];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (idObject) {\n          if (idObject && idObject.id && typeof idObject === 'object' && typeof idObject.id === 'string') {\n            deleteIDs.push(idObject.id);\n          }\n        });\n      } else if (deletedIDField && deletedIDField.id && typeof deletedIDField.id === 'string') {\n        deleteIDs.push(deletedIDField.id);\n      }\n    } else if (deletedIDField && typeof deletedIDFieldName === 'string' && typeof deletedIDField === 'object') {\n      deletedIDField = deletedIDField[deletedIDFieldName];\n\n      if (typeof deletedIDField === 'string') {\n        deleteIDs.push(deletedIDField);\n      } else if (Array.isArray(deletedIDField)) {\n        deletedIDField.forEach(function (id) {\n          if (typeof id === 'string') {\n            deleteIDs.push(id);\n          }\n        });\n      }\n    }\n\n    deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs);\n  };\n}\n\nfunction deleteNode(parentID, connectionKeys, pathToConnection, store, deleteIDs) {\n  process.env.NODE_ENV !== \"production\" ? warning(connectionKeys != null, 'RelayDeclarativeMutationConfig: RANGE_DELETE must provide a ' + 'connectionKeys') : void 0;\n  var parent = store.get(parentID);\n\n  if (!parent) {\n    return;\n  }\n\n  if (pathToConnection.length < 2) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection must include at least parent and connection') : void 0;\n    return;\n  }\n\n  var recordProxy = parent;\n\n  for (var i = 1; i < pathToConnection.length - 1; i++) {\n    if (recordProxy) {\n      recordProxy = recordProxy.getLinkedRecord(pathToConnection[i]);\n    }\n  } // Should never enter loop except edge cases\n\n\n  if (!connectionKeys || !recordProxy) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'RelayDeclarativeMutationConfig: RANGE_DELETE ' + 'pathToConnection is incorrect. Unable to find connection with ' + 'parentID: %s and path: %s', parentID, pathToConnection.toString()) : void 0;\n    return;\n  }\n\n  var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(connectionKeys),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step3.value;\n      var connection = ConnectionHandler.getConnection(recordProxy, key.key, key.filters);\n\n      if (connection) {\n        deleteIDs.forEach(function (deleteID) {\n          ConnectionHandler.deleteNode(connection, deleteID);\n        });\n      }\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nfunction getRootField(request) {\n  if (request.fragment.selections && request.fragment.selections.length > 0 && request.fragment.selections[0].kind === 'LinkedField') {\n    return request.fragment.selections[0].name;\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  MutationTypes: MutationTypes,\n  RangeOperations: RangeOperations,\n  convert: convert\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}