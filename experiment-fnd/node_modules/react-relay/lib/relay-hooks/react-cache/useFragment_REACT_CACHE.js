/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @emails oncall+relay
 * 
 * @format
 */
// flowlint ambiguous-object-type:error
'use strict';

var _require = require('../loadQuery'),
    useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;

var useStaticFragmentNodeWarning = require('../useStaticFragmentNodeWarning');

var useFragmentInternal = require('./useFragmentInternal_REACT_CACHE');

var _require2 = require('react'),
    useDebugValue = _require2.useDebugValue;

var _require3 = require('relay-runtime'),
    getFragment = _require3.getFragment;

function useFragment(fragment, key) {
  // We need to use this hook in order to be able to track if
  // loadQuery was called during render
  useTrackLoadQueryInRender();
  var fragmentNode = getFragment(fragment);

  if (process.env.NODE_ENV !== "production") {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useStaticFragmentNodeWarning(fragmentNode, 'first argument of useFragment()');
  }

  var data = useFragmentInternal(fragmentNode, key, 'useFragment()');

  if (process.env.NODE_ENV !== "production") {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useDebugValue({
      fragment: fragmentNode.name,
      data: data
    });
  }

  return data;
}

module.exports = useFragment;