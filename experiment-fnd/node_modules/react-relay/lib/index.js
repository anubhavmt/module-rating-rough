/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 */
// flowlint ambiguous-object-type:error
'use strict';

var ReactRelayContext = require('./ReactRelayContext');

var ReactRelayFragmentContainer = require('./ReactRelayFragmentContainer');

var ReactRelayLocalQueryRenderer = require('./ReactRelayLocalQueryRenderer');

var ReactRelayPaginationContainer = require('./ReactRelayPaginationContainer');

var ReactRelayQueryRenderer = require('./ReactRelayQueryRenderer');

var ReactRelayRefetchContainer = require('./ReactRelayRefetchContainer');

var EntryPointContainer = require('./relay-hooks/EntryPointContainer.react');

var loadEntryPoint = require('./relay-hooks/loadEntryPoint');

var _require = require('./relay-hooks/loadQuery'),
    loadQuery = _require.loadQuery;

var RelayEnvironmentProvider = require('./relay-hooks/RelayEnvironmentProvider');

var useEntryPointLoader = require('./relay-hooks/useEntryPointLoader');

var useFragment = require('./relay-hooks/useFragment');

var useLazyLoadQuery = require('./relay-hooks/useLazyLoadQuery');

var useMutation = require('./relay-hooks/useMutation');

var usePaginationFragment = require('./relay-hooks/usePaginationFragment');

var usePreloadedQuery = require('./relay-hooks/usePreloadedQuery');

var useQueryLoader = require('./relay-hooks/useQueryLoader');

var useRefetchableFragment = require('./relay-hooks/useRefetchableFragment');

var useRelayEnvironment = require('./relay-hooks/useRelayEnvironment');

var useSubscribeToInvalidationState = require('./relay-hooks/useSubscribeToInvalidationState');

var useSubscription = require('./relay-hooks/useSubscription');

var RelayRuntime = require('relay-runtime');

/**
 * The public interface to react-relay.
 * Currently contains both Relay Hooks and legacy Container APIs.
 * Will eventually only export the interface from ./hooks.js.
 */
module.exports = {
  ConnectionHandler: RelayRuntime.ConnectionHandler,
  QueryRenderer: ReactRelayQueryRenderer,
  LocalQueryRenderer: ReactRelayLocalQueryRenderer,
  MutationTypes: RelayRuntime.MutationTypes,
  RangeOperations: RelayRuntime.RangeOperations,
  ReactRelayContext: ReactRelayContext,
  applyOptimisticMutation: RelayRuntime.applyOptimisticMutation,
  commitLocalUpdate: RelayRuntime.commitLocalUpdate,
  commitMutation: RelayRuntime.commitMutation,
  createFragmentContainer: ReactRelayFragmentContainer.createContainer,
  createPaginationContainer: ReactRelayPaginationContainer.createContainer,
  createRefetchContainer: ReactRelayRefetchContainer.createContainer,
  fetchQuery_DEPRECATED: RelayRuntime.fetchQuery_DEPRECATED,
  graphql: RelayRuntime.graphql,
  readInlineData: RelayRuntime.readInlineData,
  requestSubscription: RelayRuntime.requestSubscription,
  // Relay Hooks
  EntryPointContainer: EntryPointContainer,
  RelayEnvironmentProvider: RelayEnvironmentProvider,
  fetchQuery: RelayRuntime.fetchQuery,
  loadQuery: loadQuery,
  loadEntryPoint: loadEntryPoint,
  useFragment: useFragment,
  useLazyLoadQuery: useLazyLoadQuery,
  useEntryPointLoader: useEntryPointLoader,
  useQueryLoader: useQueryLoader,
  useMutation: useMutation,
  usePaginationFragment: usePaginationFragment,
  usePreloadedQuery: usePreloadedQuery,
  useRefetchableFragment: useRefetchableFragment,
  useRelayEnvironment: useRelayEnvironment,
  useSubscribeToInvalidationState: useSubscribeToInvalidationState,
  useSubscription: useSubscription
};