import "core-js/modules/es.object.keys.js";
import { jsxDEV as _jsxDEV } from "react/jsx-dev-runtime";
import _defineProperty from "/app/node_modules/@babel/runtime/helpers/esm/defineProperty";
import _objectSpread from "/app/node_modules/@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "/app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "/app/node_modules/@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "/app/node_modules/@babel/runtime/helpers/esm/createClass";
import _inherits from "/app/node_modules/@babel/runtime/helpers/esm/inherits";
import _createSuper from "/app/node_modules/@babel/runtime/helpers/esm/createSuper";
var _jsxFileName = "/app/packages/Loader/src/index.js";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import theme from '@mindtickle/styles/lib/theme';
import StyledLoader from './css.js';
export var LOADING_SIZE = {
  sizeBig: 'big',
  sizeXSmall: 'xsmall',
  sizeSmall: 'small'
};
export var LOADER_TYPE = {
  Small: 'smallPageLoadingScreen',
  Full: 'fullPageloadingScreen'
};
var DEFAULT_LOADER_STYLE = {
  borderColor: theme.colors.INDIGO
};

var Loader = /*#__PURE__*/function (_Component) {
  _inherits(Loader, _Component);

  var _super = _createSuper(Loader);

  function Loader() {
    _classCallCheck(this, Loader);

    return _super.apply(this, arguments);
  }

  _createClass(Loader, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          message = _this$props.message,
          size = _this$props.size,
          type = _this$props.type,
          style = _this$props.style,
          loaderClassName = _this$props.loaderClassName;

      var loaderStyle = style.loaderStyle,
          rest = _objectWithoutProperties(style, ["loaderStyle"]);

      loaderStyle = _objectSpread(_objectSpread({}, DEFAULT_LOADER_STYLE), loaderStyle);
      var wrapperClasses = classnames(_defineProperty({}, LOADER_TYPE[type], true), className);
      return /*#__PURE__*/_jsxDEV(StyledLoader, {
        className: wrapperClasses,
        style: _objectSpread({}, rest),
        loaderStyle: loaderStyle,
        children: /*#__PURE__*/_jsxDEV("div", {
          className: "loader ".concat(loaderClassName),
          children: [/*#__PURE__*/_jsxDEV("div", {
            className: 'loadingHeading',
            children: this.props.loadingMessage
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 56,
            columnNumber: 11
          }, this), /*#__PURE__*/_jsxDEV("div", {
            className: classnames('spinner', LOADING_SIZE[size]),
            children: [/*#__PURE__*/_jsxDEV("div", {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 58,
              columnNumber: 13
            }, this), /*#__PURE__*/_jsxDEV("div", {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 59,
              columnNumber: 13
            }, this), /*#__PURE__*/_jsxDEV("div", {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 60,
              columnNumber: 13
            }, this), /*#__PURE__*/_jsxDEV("div", {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 61,
              columnNumber: 13
            }, this)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 57,
            columnNumber: 11
          }, this), !!message && /*#__PURE__*/_jsxDEV("div", {
            className: "loaderMessage",
            children: message
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 63,
            columnNumber: 25
          }, this)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 55,
          columnNumber: 9
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 54,
        columnNumber: 7
      }, this);
    }
  }]);

  return Loader;
}(Component);

Loader.propTypes = {
  className: PropTypes.string,

  /** The type of the loader */
  type: PropTypes.oneOf(Object.keys(LOADER_TYPE)),

  /** The size of the loader */
  size: PropTypes.oneOf(Object.keys(LOADING_SIZE)),

  /** Message to be displayed */
  style: PropTypes.object,
  message: PropTypes.string,
  loadingMessage: PropTypes.string,
  loaderClassName: PropTypes.string
};
Loader.defaultProps = {
  style: {},
  type: 'Small',
  size: 'sizeBig',
  loaderClassName: ''
};
export default Loader;