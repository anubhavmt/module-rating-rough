import "core-js/modules/es.array.concat.js";
import "antd/lib/button/style";
import _Button from "antd/lib/button";
import _taggedTemplateLiteral from "/app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral";
import _defineProperty from "/app/node_modules/@babel/runtime/helpers/esm/defineProperty";

var _BUTTON_LOADER_COLOR, _MT_SIZE_TO_ANT_BUTTO, _MT_TYPE_ANT_BUTTON_T, _MT_TYPE_ANT_BUTTON_T2, _MT_TYPE_ANT_BUTTON_T3, _MT_TYPE_ANT_BUTTON_T4, _MT_TYPE_ANT_BUTTON_T5, _MT_TYPE_ANT_BUTTON_T6, _MT_TYPE_ANT_BUTTON_T7, _MT_TYPE_ANT_BUTTON_T8, _MT_TYPE_ANT_BUTTON_T9, _BUTTON_TO_SIZE_MAP, _ANTD_BUTTON_SIZE_PAD;

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  &.ant-btn {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n    padding: ", ";\n\n    /*---------- Default Button styles ------------*/\n    &.ant-btn-default {\n      &:hover {\n        color: ", ";\n        border: 1px solid ", ";\n      }\n      &:active,\n      &:focus,\n      &.active {\n        border: 1px solid ", ";\n        color: ", ";\n      }\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        border: 1px solid ", ";\n        background-color: ", ";\n        color: ", ";\n      }\n    }\n    /*---------- Success Button styles ------------*/\n    &.ant-btn-success {\n      &:hover,\n      &:focus,\n      &:active,\n      &.active {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n    }\n\n    /*---------- Danger Button styles ------------*/\n    &.ant-btn-danger {\n      &:hover,\n      &:focus,\n      &:active,\n      &.active {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n    }\n\n    /*---------- Primary Button styles ------------*/\n    &.ant-btn-primary {\n      &:hover {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n      &:focus,\n      &:active,\n      &.active {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        border: 1px solid ", ";\n        background: ", ";\n        color: ", ";\n      }\n    }\n\n    /*---------- Edit Button styles ------------*/\n    &.ant-btn-edit {\n      border: 1px solid ", ";\n      color: ", ";\n\n      &:hover,\n      &:focus,\n      &:active,\n      &.active {\n        border: 1px solid ", ";\n        color: ", ";\n        span {\n          color: ", ";\n        }\n      }\n\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        background-color: ", ";\n        color: ", ";\n        border: 1px solid ", ";\n      }\n    }\n\n    /*---------- Dashed Button styles ------------*/\n    &.ant-btn-dashed {\n      border: 1px dashed ", ";\n      background-color: ", ";\n      color: ", ";\n\n      &:hover,\n      &:focus,\n      &:active,\n      &.active {\n        color: ", ";\n      }\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        border: 1px dashed ", ";\n        background-color: ", ";\n        color: ", ";\n      }\n    }\n    /*---------- Text Button styles ------------*/\n    &.ant-btn-text {\n      border: 1px dashed transparent;\n      background-color: transparent;\n      color: ", ";\n\n      ", ";\n      ", ";\n\n      &:hover,\n      &:focus,\n      &:active {\n        border: 1px dashed transparent;\n        ", ";\n        ", ";\n      }\n      /* &.ant-btn-sm {\n        font-size: 12px;\n      } */\n      &.disabled,\n      &:disabled,\n      &[disabled]:hover {\n        border: 1px solid transparent;\n        background-color: ", ";\n        color: ", ";\n      }\n    }\n\n    /*---------- Link Blue Button styles ------------*/\n    &.ant-btn-link {\n      border: 1px solid ", ";\n      background-color: ", ";\n      color: ", ";\n\n      &.disabled,\n      &:disabled {\n        background-color: ", ";\n        color: ", ";\n        border: 1px solid ", ";\n      }\n    }\n  }\n\n  &.ant-btn-clicked {\n    outline: none;\n    outline-style: none;\n  }\n  .editIcon {\n    padding: 3px;\n  }\n\n  /* loading Button styles */\n\n  &.ant-btn-loading:not(.ant-btn-circle):not(.ant-btn-circle-outline):not(.ant-btn-icon-only) {\n    &.ant-btn-sm,\n    &.ant-btn.lg,\n    &.ant-btn {\n      padding: ", ";\n\n      &:before {\n        background: transparent;\n      }\n    }\n    .anticon {\n      display: none;\n    }\n  }\n\n  &.ant-btn {\n    & > span {\n      visibility: ", ";\n    }\n    & > .anticon {\n      & + span {\n        display: none;\n      }\n    }\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

import styled from 'styled-components';
import theme from '@mindtickle/styles/lib/theme';
export var BUTTON_SIZES = {
  LARGE: 'large',
  SMALL: 'small',
  MEDIUM: 'medium'
};
export var BUTTON_TYPES = {
  PRIMARY: 'primary',
  SECONDARY: 'secondary',
  TERTIARY: 'tertiary',
  LINK: 'link',
  TEXT: 'text',
  EDIT: 'edit',
  DANGER: 'danger',
  SUCCESS: 'success'
};
export var BUTTON_LOADER_COLOR = (_BUTTON_LOADER_COLOR = {}, _defineProperty(_BUTTON_LOADER_COLOR, BUTTON_TYPES.PRIMARY, theme.colors.WHITE), _defineProperty(_BUTTON_LOADER_COLOR, BUTTON_TYPES.SECONDARY, theme.colors.DARK_OUTER_SPACE), _defineProperty(_BUTTON_LOADER_COLOR, BUTTON_TYPES.TERTIARY, theme.colors.OUTER_SPACE), _defineProperty(_BUTTON_LOADER_COLOR, BUTTON_TYPES.LINK, theme.colors.INDIGO), _defineProperty(_BUTTON_LOADER_COLOR, BUTTON_TYPES.TEXT, theme.colors.OUTER_SPACE), _defineProperty(_BUTTON_LOADER_COLOR, BUTTON_TYPES.EDIT, theme.colors.OUTER_SPACE), _BUTTON_LOADER_COLOR);
export var MT_SIZE_TO_ANT_BUTTON_SIZE_MAP = (_MT_SIZE_TO_ANT_BUTTO = {}, _defineProperty(_MT_SIZE_TO_ANT_BUTTO, BUTTON_SIZES.LARGE, BUTTON_SIZES.LARGE), _defineProperty(_MT_SIZE_TO_ANT_BUTTO, BUTTON_SIZES.MEDIUM, 'default'), _defineProperty(_MT_SIZE_TO_ANT_BUTTO, BUTTON_SIZES.SMALL, BUTTON_SIZES.SMALL), _MT_SIZE_TO_ANT_BUTTO);
export var MT_TYPE_ANT_BUTTON_TYPE_MAP = (_MT_TYPE_ANT_BUTTON_T = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.PRIMARY, 'primary'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.SECONDARY, 'default'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.TERTIARY, 'dashed'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.LINK, 'link'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.TEXT, 'text'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.EDIT, 'edit'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.DANGER, 'danger'), _defineProperty(_MT_TYPE_ANT_BUTTON_T, BUTTON_TYPES.SUCCESS, 'success'), _MT_TYPE_ANT_BUTTON_T);
var BUTTON_TO_SIZE_MAP = (_BUTTON_TO_SIZE_MAP = {}, _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.PRIMARY], (_MT_TYPE_ANT_BUTTON_T2 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T2, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T2, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'default'), _defineProperty(_MT_TYPE_ANT_BUTTON_T2, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T2)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.SECONDARY], (_MT_TYPE_ANT_BUTTON_T3 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T3, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T3, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'default'), _defineProperty(_MT_TYPE_ANT_BUTTON_T3, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T3)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.TERTIARY], (_MT_TYPE_ANT_BUTTON_T4 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T4, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T4, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'medium'), _defineProperty(_MT_TYPE_ANT_BUTTON_T4, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T4)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.LINK], (_MT_TYPE_ANT_BUTTON_T5 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T5, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T5, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'medium'), _defineProperty(_MT_TYPE_ANT_BUTTON_T5, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T5)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.TEXT], (_MT_TYPE_ANT_BUTTON_T6 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T6, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T6, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'medium'), _defineProperty(_MT_TYPE_ANT_BUTTON_T6, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T6)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.EDIT], (_MT_TYPE_ANT_BUTTON_T7 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T7, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T7, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'medium'), _defineProperty(_MT_TYPE_ANT_BUTTON_T7, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T7)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.DANGER], (_MT_TYPE_ANT_BUTTON_T8 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T8, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T8, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'medium'), _defineProperty(_MT_TYPE_ANT_BUTTON_T8, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T8)), _defineProperty(_BUTTON_TO_SIZE_MAP, MT_TYPE_ANT_BUTTON_TYPE_MAP[BUTTON_TYPES.SUCCESS], (_MT_TYPE_ANT_BUTTON_T9 = {}, _defineProperty(_MT_TYPE_ANT_BUTTON_T9, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.LARGE], BUTTON_SIZES.LARGE), _defineProperty(_MT_TYPE_ANT_BUTTON_T9, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.MEDIUM], 'medium'), _defineProperty(_MT_TYPE_ANT_BUTTON_T9, MT_SIZE_TO_ANT_BUTTON_SIZE_MAP[BUTTON_SIZES.SMALL], BUTTON_SIZES.SMALL), _MT_TYPE_ANT_BUTTON_T9)), _BUTTON_TO_SIZE_MAP);
export var ANTD_BUTTON_SIZE_PADDING = (_ANTD_BUTTON_SIZE_PAD = {}, _defineProperty(_ANTD_BUTTON_SIZE_PAD, BUTTON_SIZES.LARGE, '0px 24px'), _defineProperty(_ANTD_BUTTON_SIZE_PAD, "default", '0px 12px'), _defineProperty(_ANTD_BUTTON_SIZE_PAD, "medium", '0px 16px'), _defineProperty(_ANTD_BUTTON_SIZE_PAD, BUTTON_SIZES.SMALL, '0px 12px'), _ANTD_BUTTON_SIZE_PAD);
var MtButton = styled(_Button)(_templateObject(), function (props) {
  return ANTD_BUTTON_SIZE_PADDING[BUTTON_TO_SIZE_MAP[props.type][props.size]];
}, theme.colors.DARK_OUTER_SPACE, theme.colors.SILVER, theme.colors.INDIGO, theme.colors.INDIGO, theme.colors.DISABLE, theme.colors.PORCELAIN, theme.colors.SILVER, theme.colors.PASTEL_GREEN, theme.colors.PASTEL_GREEN, theme.colors.WHITE, theme.colors.ALTO, theme.colors.ALTO, theme.colors.WHITE, theme.colors.BITTERSWEET, theme.colors.BITTERSWEET, theme.colors.WHITE, theme.colors.ALTO, theme.colors.ALTO, theme.colors.WHITE, theme.colors.JODHPUR, theme.colors.JODHPUR, theme.colors.WHITE, theme.colors.NEPTUNE, theme.colors.NEPTUNE, theme.colors.WHITE, theme.colors.ALTO, theme.colors.ALTO, theme.colors.WHITE, theme.colors.ALTO, theme.colors.SILVER, theme.colors.ALTO, theme.colors.SILVER, theme.colors.SILVER, theme.colors.PORCELAIN, theme.colors.SILVER, theme.colors.DISABLE, theme.colors.ALTO, theme.colors.WHITE, theme.colors.OUTER_SPACE, theme.colors.SHARK, theme.colors.ALTO, theme.colors.WHITE, theme.colors.SILVER, function (props) {
  return props.danger ? "".concat(theme.colors.BITTERSWEET) : "".concat(theme.colors.OUTER_SPACE);
}, function (props) {
  return props.active ? "color: ".concat(theme.colors.INDIGO, ";\n          background-color: ").concat(theme.colors.TROPICAL_BLUE) : null;
}, function (props) {
  return props.disabled ? "color: ".concat(theme.colors.OUTER_SPACE) : null;
}, function (props) {
  return props.active ? "color: ".concat(theme.colors.INDIGO, ";\n            background-color: ").concat(theme.colors.TROPICAL_BLUE) : "background-color: transparent;\n              color: ".concat(theme.colors.INDIGO);
}, function (props) {
  return props.danger ? "color: ".concat(theme.colors.BITTERSWEET) : null;
}, theme.colors.WHITE, theme.colors.SILVER, theme.colors.INDIGO, theme.colors.WHITE, theme.colors.INDIGO, theme.colors.WHITE, theme.colors.SILVER, theme.colors.DISABLE, function (props) {
  return ANTD_BUTTON_SIZE_PADDING[BUTTON_TO_SIZE_MAP[props.type][props.size]];
}, function (props) {
  return props.loading ? 'hidden' : 'visible';
});
export default MtButton;